---
openapi: 3.0.3
info:
  title: Platform API
  contact:
    name: Spark Solutions
    url: https://sparksolutions.co
    email: we@sparksolutions.co
  description: Spree Platform API
  version: v2
paths:
  "/api/v2/platform/addresses":
    get:
      summary: Return a list of Addresses
      tags:
      - Addresses
      security:
      - bearer_auth: []
      description: Returns a list of Addresses
      operationId: addresses-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user,country,state
        schema:
          type: string
      - name: filter[user_id_eq]
        in: query
        description: ''
        example: '1'
        schema:
          type: string
      - name: filter[firstname_cont]
        in: query
        description: ''
        example: John
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create an Address
      tags:
      - Addresses
      security:
      - bearer_auth: []
      description: Creates an Address
      operationId: create-address
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user,country,state
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_address_params"
  "/api/v2/platform/addresses/{id}":
    get:
      summary: Return an Address
      tags:
      - Addresses
      security:
      - bearer_auth: []
      description: Returns an Address
      operationId: show-address
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user,country,state
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update an Address
      tags:
      - Addresses
      security:
      - bearer_auth: []
      description: Updates an Address
      operationId: update-address
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user,country,state
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_address_params"
    delete:
      summary: Delete an Address
      tags:
      - Addresses
      security:
      - bearer_auth: []
      description: Deletes an Address
      operationId: delete-address
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/adjustments":
    get:
      summary: Return a list of Adjustments
      tags:
      - Adjustments
      security:
      - bearer_auth: []
      description: Returns a list of Adjustments
      operationId: adjustments-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: order,adjustable
        schema:
          type: string
      - name: filter[order_id]
        in: query
        description: ''
        example: '1234'
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create an Adjustment
      tags:
      - Adjustments
      security:
      - bearer_auth: []
      description: Creates an Adjustment
      operationId: create-adjustment
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: order,adjustable
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_adjustment_params"
  "/api/v2/platform/adjustments/{id}":
    get:
      summary: Return an Adjustment
      tags:
      - Adjustments
      security:
      - bearer_auth: []
      description: Returns an Adjustment
      operationId: show-adjustment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: order,adjustable
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update an Adjustment
      tags:
      - Adjustments
      security:
      - bearer_auth: []
      description: Updates an Adjustment
      operationId: update-adjustment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: order,adjustable
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_adjustment_params"
    delete:
      summary: Delete an Adjustment
      tags:
      - Adjustments
      security:
      - bearer_auth: []
      description: Deletes an Adjustment
      operationId: delete-adjustment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/classifications":
    get:
      summary: Return a list of Classifications
      tags:
      - Classifications
      security:
      - bearer_auth: []
      description: Returns a list of Classifications
      operationId: classifications-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: product,taxon
        schema:
          type: string
      - name: filter[taxon_id_eq]
        in: query
        description: ''
        example: '1'
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Classification
      tags:
      - Classifications
      security:
      - bearer_auth: []
      description: Creates a Classification
      operationId: create-classification
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: product,taxon
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_classification_params"
  "/api/v2/platform/classifications/{id}":
    get:
      summary: Return a Classification
      tags:
      - Classifications
      security:
      - bearer_auth: []
      description: Returns a Classification
      operationId: show-classification
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: product,taxon
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Classification
      tags:
      - Classifications
      security:
      - bearer_auth: []
      description: Updates a Classification
      operationId: update-classification
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: product,taxon
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_classification_params"
    delete:
      summary: Delete a Classification
      tags:
      - Classifications
      security:
      - bearer_auth: []
      description: Deletes a Classification
      operationId: delete-classification
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/cms_pages":
    get:
      summary: Return a list of CMS Pages
      tags:
      - CMS Pages
      security:
      - bearer_auth: []
      description: Returns a list of CMS Pages
      operationId: cms-pages-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: cms_sections
        schema:
          type: string
      - name: filter[type_eq]
        in: query
        description: ''
        example: Spree::Cms::Pages::FeaturePage
        schema:
          type: string
      - name: filter[locale_eq]
        in: query
        description: ''
        example: en
        schema:
          type: string
      - name: filter[title_cont]
        in: query
        description: ''
        example: About Us
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a CMS Page
      tags:
      - CMS Pages
      security:
      - bearer_auth: []
      description: Creates a CMS Page
      operationId: create-cms-page
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: cms_sections
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - "$ref": "#/components/schemas/create_standard_cms_page_params"
              - "$ref": "#/components/schemas/create_homepage_cms_page_params"
              - "$ref": "#/components/schemas/create_feature_cms_page_params"
  "/api/v2/platform/cms_pages/{id}":
    get:
      summary: Return a CMS Page
      tags:
      - CMS Pages
      security:
      - bearer_auth: []
      description: Returns a CMS Page
      operationId: show-cms-page
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: cms_sections
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a CMS Page
      tags:
      - CMS Pages
      security:
      - bearer_auth: []
      description: Updates a CMS Page
      operationId: update-cms-page
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: cms_sections
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - "$ref": "#/components/schemas/update_standard_cms_page_params"
              - "$ref": "#/components/schemas/update_homepage_cms_page_params"
              - "$ref": "#/components/schemas/update_feature_cms_page_params"
    delete:
      summary: Delete a CMS Page
      tags:
      - CMS Pages
      security:
      - bearer_auth: []
      description: Deletes a CMS Page
      operationId: delete-cms-page
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/cms_sections":
    get:
      summary: Return a list of CMS Sections
      tags:
      - CMS Sections
      security:
      - bearer_auth: []
      description: Returns a list of CMS Sections
      operationId: cms-sections-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: product
        schema:
          type: string
      - name: filter[name_eq]
        in: query
        description: ''
        example: Hero
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a CMS Section
      tags:
      - CMS Sections
      security:
      - bearer_auth: []
      description: Creates a CMS Section
      operationId: create-cms-section
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: product
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - "$ref": "#/components/schemas/create_hero_image_cms_section_params"
              - "$ref": "#/components/schemas/create_product_carousel_cms_section_params"
              - "$ref": "#/components/schemas/create_side_by_side_images_cms_section_params"
              - "$ref": "#/components/schemas/create_featured_article_cms_section_params"
              - "$ref": "#/components/schemas/create_image_gallery_cms_section_params"
              - "$ref": "#/components/schemas/create_rich_text_cms_section_params"
  "/api/v2/platform/cms_sections/{id}":
    get:
      summary: Return a CMS Section
      tags:
      - CMS Sections
      security:
      - bearer_auth: []
      description: Returns a CMS Section
      operationId: show-cms-section
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: product
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a CMS Section
      tags:
      - CMS Sections
      security:
      - bearer_auth: []
      description: Updates a CMS Section
      operationId: update-cms-section
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - "$ref": "#/components/schemas/update_hero_image_cms_section_params"
              - "$ref": "#/components/schemas/update_product_carousel_cms_section_params"
              - "$ref": "#/components/schemas/update_side_by_side_images_cms_section_params"
              - "$ref": "#/components/schemas/update_featured_article_cms_section_params"
              - "$ref": "#/components/schemas/update_image_gallery_cms_section_params"
              - "$ref": "#/components/schemas/update_rich_text_cms_section_params"
    delete:
      summary: Delete a CMS Section
      tags:
      - CMS Sections
      security:
      - bearer_auth: []
      description: Deletes a CMS Section
      operationId: delete-cms-section
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/countries":
    get:
      summary: Returns a list of Countries
      tags:
      - Countries
      security:
      - bearer_auth: []
      operationId: countries-list
      description: Returns a list of Countries
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
  "/api/v2/platform/countries/{id}":
    get:
      summary: Returns a Country
      tags:
      - Countries
      security:
      - bearer_auth: []
      operationId: show-country
      description: Returns a Country
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/digital_links":
    get:
      summary: Return a list of Digital Links
      tags:
      - Digital Links
      security:
      - bearer_auth: []
      description: Returns a list of Digital Links
      operationId: digital-links-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Digital Link
      tags:
      - Digital Links
      security:
      - bearer_auth: []
      description: Creates a Digital Link
      operationId: create-digital-link
      parameters: []
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_digital_link_params"
  "/api/v2/platform/digital_links/{id}":
    get:
      summary: Return a Digital Link
      tags:
      - Digital Links
      security:
      - bearer_auth: []
      description: Returns a Digital Link
      operationId: show-digital-link
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Digital Link
      tags:
      - Digital Links
      security:
      - bearer_auth: []
      description: Updates a Digital Link
      operationId: update-digital-link
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_digital_link_params"
    delete:
      summary: Delete a Digital Link
      tags:
      - Digital Links
      security:
      - bearer_auth: []
      description: Deletes a Digital Link
      operationId: delete-digital-link
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/digital_links/{id}/reset":
    patch:
      summary: Reset a Digital Link
      tags:
      - Digital Links
      security:
      - bearer_auth: []
      operationId: reset-digital-link
      description: Resets a digital link, allowing further downloads.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/digitals":
    get:
      summary: Return a list of Digital Assets
      tags:
      - Digital Assets
      security:
      - bearer_auth: []
      description: Returns a list of Digital Assets
      operationId: digitals-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: variant
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Digital Asset
      tags:
      - Digital Assets
      security:
      - bearer_auth: []
      description: Creates a Digital Asset
      operationId: create-digital
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: variant
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/create_digital_params"
  "/api/v2/platform/digitals/{id}":
    get:
      summary: Return a Digital Asset
      tags:
      - Digital Assets
      security:
      - bearer_auth: []
      description: Returns a Digital Asset
      operationId: show-digital
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: variant
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Digital Asset
      tags:
      - Digital Assets
      security:
      - bearer_auth: []
      description: Updates a Digital Asset
      operationId: update-digital
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: variant
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/update_digital_params"
    delete:
      summary: Delete a Digital Asset
      tags:
      - Digital Assets
      security:
      - bearer_auth: []
      description: Deletes a Digital Asset
      operationId: delete-digital
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/line_items":
    get:
      summary: Return a list of Line Items
      tags:
      - Line Items
      security:
      - bearer_auth: []
      description: Returns a list of Line Items
      operationId: line-items-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: order,tax_category,variant.product,digital_links
        schema:
          type: string
      - name: filter[order_id_eq]
        in: query
        description: ''
        example: '123'
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Line Item
      tags:
      - Line Items
      security:
      - bearer_auth: []
      description: Creates a Line Item
      operationId: create-line-item
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: order,tax_category,variant.product,digital_links
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_line_item_params"
  "/api/v2/platform/line_items/{id}":
    get:
      summary: Return a Line Item
      tags:
      - Line Items
      security:
      - bearer_auth: []
      description: Returns a Line Item
      operationId: show-line-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: order,tax_category,variant.product,digital_links
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Line Item
      tags:
      - Line Items
      security:
      - bearer_auth: []
      description: Updates a Line Item
      operationId: update-line-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: order,tax_category,variant.product,digital_links
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_line_item_params"
    delete:
      summary: Delete a Line Item
      tags:
      - Line Items
      security:
      - bearer_auth: []
      description: Deletes a Line Item
      operationId: delete-line-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/menu_items":
    get:
      summary: Return a list of Menu Items
      tags:
      - Menu Items
      security:
      - bearer_auth: []
      description: Returns a list of Menu Items
      operationId: menu-items-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: menu,icon,parent,children,linked_resource
        schema:
          type: string
      - name: filter[name_eq]
        in: query
        description: ''
        example: T-Shirts
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Menu Item
      tags:
      - Menu Items
      security:
      - bearer_auth: []
      description: Creates a Menu Item
      operationId: create-menu-item
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: menu,icon,parent,children,linked_resource
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_menu_item_params"
  "/api/v2/platform/menu_items/{id}":
    get:
      summary: Return a Menu Item
      tags:
      - Menu Items
      security:
      - bearer_auth: []
      description: Returns a Menu Item
      operationId: show-menu-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: menu,icon,parent,children,linked_resource
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Menu Item
      tags:
      - Menu Items
      security:
      - bearer_auth: []
      description: Updates a Menu Item
      operationId: update-menu-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: menu,icon,parent,children,linked_resource
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_menu_item_params"
    delete:
      summary: Delete a Menu Item
      tags:
      - Menu Items
      security:
      - bearer_auth: []
      description: Deletes a Menu Item
      operationId: delete-menu-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/menu_items/{id}/reposition":
    patch:
      summary: Reposition a Menu Item
      tags:
      - Menu Items
      security:
      - bearer_auth: []
      operationId: reposition-menu-item
      description: Reposition a Menu Item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/menu_item_reposition"
  "/api/v2/platform/menus":
    get:
      summary: Return a list of Menus
      tags:
      - Menus
      security:
      - bearer_auth: []
      description: Returns a list of Menus
      operationId: menus-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: menu_items
        schema:
          type: string
      - name: filter[name_eq]
        in: query
        description: ''
        example: Main Menu
        schema:
          type: string
      - name: filter[location_eq]
        in: query
        description: ''
        example: header
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Menu
      tags:
      - Menus
      security:
      - bearer_auth: []
      description: Creates a Menu
      operationId: create-menu
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: menu_items
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_menu_params"
  "/api/v2/platform/menus/{id}":
    get:
      summary: Return a Menu
      tags:
      - Menus
      security:
      - bearer_auth: []
      description: Returns a Menu
      operationId: show-menu
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: menu_items
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Menu
      tags:
      - Menus
      security:
      - bearer_auth: []
      description: Updates a Menu
      operationId: update-menu
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: menu_items
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_menu_params"
    delete:
      summary: Delete a Menu
      tags:
      - Menus
      security:
      - bearer_auth: []
      description: Deletes a Menu
      operationId: delete-menu
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/option_types":
    get:
      summary: Return a list of Option Types
      tags:
      - Option Types
      security:
      - bearer_auth: []
      description: Returns a list of Option Types
      operationId: option-types-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: filter[option_type_id_eq]
        in: query
        description: ''
        example: '1'
        schema:
          type: string
      - name: filter[name_cont]
        in: query
        description: ''
        example: Size
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create an Option Type
      tags:
      - Option Types
      security:
      - bearer_auth: []
      description: Creates an Option Type
      operationId: create-option-type
      parameters: []
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_option_type_params"
  "/api/v2/platform/option_types/{id}":
    get:
      summary: Return an Option Type
      tags:
      - Option Types
      security:
      - bearer_auth: []
      description: Returns an Option Type
      operationId: show-option-type
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update an Option Type
      tags:
      - Option Types
      security:
      - bearer_auth: []
      description: Updates an Option Type
      operationId: update-option-type
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_option_type_params"
    delete:
      summary: Delete an Option Type
      tags:
      - Option Types
      security:
      - bearer_auth: []
      description: Deletes an Option Type
      operationId: delete-option-type
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/option_values":
    get:
      summary: Return a list of Option Values
      tags:
      - Option Values
      security:
      - bearer_auth: []
      description: Returns a list of Option Values
      operationId: option-values-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: option_type
        schema:
          type: string
      - name: filter[option_type_id_eq]
        in: query
        description: ''
        example: '1'
        schema:
          type: string
      - name: filter[name_cont]
        in: query
        description: ''
        example: Red
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create an Option Value
      tags:
      - Option Values
      security:
      - bearer_auth: []
      description: Creates an Option Value
      operationId: create-option-value
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: option_type
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_option_value_params"
  "/api/v2/platform/option_values/{id}":
    get:
      summary: Return an Option Value
      tags:
      - Option Values
      security:
      - bearer_auth: []
      description: Returns an Option Value
      operationId: show-option-value
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: option_type
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update an Option Value
      tags:
      - Option Values
      security:
      - bearer_auth: []
      description: Updates an Option Value
      operationId: update-option-value
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: option_type
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_option_value_params"
    delete:
      summary: Delete an Option Value
      tags:
      - Option Values
      security:
      - bearer_auth: []
      description: Deletes an Option Value
      operationId: delete-option-value
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/orders":
    get:
      summary: Return a list of Orders
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Returns a list of Orders
      operationId: orders-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      - name: filter[state_eq]
        in: query
        description: ''
        example: complete
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Creates an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Creates an Order
      operationId: create-order
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '201':
          description: Record created
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_order_params"
  "/api/v2/platform/orders/{id}":
    get:
      summary: Return an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Returns an Order
      operationId: show-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Updates an Order
      operationId: update-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_order_params"
    delete:
      summary: Delete an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Deletes an Order
      operationId: delete-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/orders/{id}/advance":
    patch:
      summary: Advances an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Advances an Order
      operationId: advance-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/orders/{id}/next":
    patch:
      summary: Next an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Moves an Order to the next state
      operationId: next-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/orders/{id}/complete":
    patch:
      summary: Completes an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Marks an Order as completed
      operationId: complete-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/orders/{id}/empty":
    patch:
      summary: Empties an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Removes all line items, promotions, shipment and payments from
        an Order
      operationId: empty-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/orders/{id}/approve":
    patch:
      summary: Approves an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Approves an Order, when using a token created for a user, it will
        save this user as the approver
      operationId: approve-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record approved
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/orders/{id}/cancel":
    patch:
      summary: Cancels an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Cancels an Order, when using a token created for a user, it will
        save this user as the canceler
      operationId: cancel-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: record canceled
        '422':
          description: cannot be canceled
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/orders/{id}/use_store_credit":
    patch:
      summary: Use Store Credit for an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Creates Store Credit payment for an Order
      operationId: use-store-credit-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: store credit payment created
        '422':
          description: user does not have store credit available
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/amount_param"
  "/api/v2/platform/orders/{id}/apply_coupon_code":
    patch:
      summary: Apply Coupon Code for an Order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Creates Store Credit payment for an Order
      operationId: apply-coupon-code-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: coupon code applied
        '422':
          description: coupon code couldn't be applied
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/coupon_code_param"
  "/api/v2/platform/payment_methods":
    get:
      summary: Return a list of Payment Methods
      tags:
      - Payment Methods
      security:
      - bearer_auth: []
      description: Returns a list of Payment Methods
      operationId: payment-methods-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: stores
        schema:
          type: string
      - name: filter[name]
        in: query
        description: ''
        example: Stripe
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Payment Method
      tags:
      - Payment Methods
      security:
      - bearer_auth: []
      description: Creates a Payment Method
      operationId: create-payment-method
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: stores
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_payment_method_params"
  "/api/v2/platform/payment_methods/{id}":
    get:
      summary: Return a Payment Method
      tags:
      - Payment Methods
      security:
      - bearer_auth: []
      description: Returns a Payment Method
      operationId: show-payment-method
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: stores
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Payment Method
      tags:
      - Payment Methods
      security:
      - bearer_auth: []
      description: Updates a Payment Method
      operationId: update-payment-method
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: stores
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - "$ref": "#/components/schemas/update_payment_method_params"
              - "$ref": "#/components/schemas/update_payment_method_params_bogus_gateway"
    delete:
      summary: Delete a Payment Method
      tags:
      - Payment Methods
      security:
      - bearer_auth: []
      description: Deletes a Payment Method
      operationId: delete-payment-method
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/payments":
    get:
      summary: Return a list of Payments
      tags:
      - Payments
      security:
      - bearer_auth: []
      description: Returns a list of Payments
      operationId: payments-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: payment_method,order,source
        schema:
          type: string
      - name: filter[payment_method_id_eq]
        in: query
        description: ''
        example: '1'
        schema:
          type: string
      - name: filter[amount_gteq]
        in: query
        description: ''
        example: '99.90'
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
  "/api/v2/platform/payments/{id}":
    get:
      summary: Return a Payment
      tags:
      - Payments
      security:
      - bearer_auth: []
      description: Returns a Payment
      operationId: show-payment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: payment_method,order,source
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    delete:
      summary: Delete a Payment
      tags:
      - Payments
      security:
      - bearer_auth: []
      description: Deletes a Payment
      operationId: delete-payment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/promotion_actions":
    get:
      summary: Return a list of Promotion Actions
      tags:
      - Promotion Actions
      security:
      - bearer_auth: []
      description: Returns a list of Promotion Actions
      operationId: promotion-actions-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: calculator
        schema:
          type: string
      - name: filter[type_eq]
        in: query
        description: ''
        example: Spree::Promotion::Actions::CreateAdjustment
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Promotion Action
      tags:
      - Promotion Actions
      security:
      - bearer_auth: []
      description: Creates a Promotion Action
      operationId: create-promotion-action
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: calculator
        schema:
          type: string
      responses:
        '201':
          description: Record created
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_promotion_action_params"
  "/api/v2/platform/promotion_actions/{id}":
    get:
      summary: Return a Promotion Action
      tags:
      - Promotion Actions
      security:
      - bearer_auth: []
      description: Returns a Promotion Action
      operationId: show-promotion-action
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: calculator
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Promotion Action
      tags:
      - Promotion Actions
      security:
      - bearer_auth: []
      description: Updates a Promotion Action
      operationId: update-promotion-action
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: calculator
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_promotion_action_params"
    delete:
      summary: Delete a Promotion Action
      tags:
      - Promotion Actions
      security:
      - bearer_auth: []
      description: Deletes a Promotion Action
      operationId: delete-promotion-action
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/promotion_categories":
    get:
      summary: Return a list of Promotion Categories
      tags:
      - Promotion Categories
      security:
      - bearer_auth: []
      description: Returns a list of Promotion Categories
      operationId: promotion-categories-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: promotions
        schema:
          type: string
      - name: filter[code_eq]
        in: query
        description: ''
        example: BLK-FRI
        schema:
          type: string
      - name: filter[name_eq]
        in: query
        description: ''
        example: 2020 Promotions
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Promotion Category
      tags:
      - Promotion Categories
      security:
      - bearer_auth: []
      description: Creates a Promotion Category
      operationId: create-promotion-category
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: promotions
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_promotion_category_params"
  "/api/v2/platform/promotion_categories/{id}":
    get:
      summary: Return a Promotion Category
      tags:
      - Promotion Categories
      security:
      - bearer_auth: []
      description: Returns a Promotion Category
      operationId: show-promotion-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: promotions
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Promotion Category
      tags:
      - Promotion Categories
      security:
      - bearer_auth: []
      description: Updates a Promotion Category
      operationId: update-promotion-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: promotions
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_promotion_category_params"
    delete:
      summary: Delete a Promotion Category
      tags:
      - Promotion Categories
      security:
      - bearer_auth: []
      description: Deletes a Promotion Category
      operationId: delete-promotion-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/promotion_rules":
    get:
      summary: Return a list of Promotion Rules
      tags:
      - Promotion Rules
      security:
      - bearer_auth: []
      description: Returns a list of Promotion Rules
      operationId: promotion-rules-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user
        schema:
          type: string
      - name: filter[type_eq]
        in: query
        description: ''
        example: Spree::Promotion::Rules::Product
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Promotion Rule
      tags:
      - Promotion Rules
      security:
      - bearer_auth: []
      description: Creates a Promotion Rule
      operationId: create-promotion-rule
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user
        schema:
          type: string
      responses:
        '201':
          description: Record created
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_promotion_rule_params"
  "/api/v2/platform/promotion_rules/{id}":
    get:
      summary: Return a Promotion Rule
      tags:
      - Promotion Rules
      security:
      - bearer_auth: []
      description: Returns a Promotion Rule
      operationId: show-promotion-rule
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Promotion Rule
      tags:
      - Promotion Rules
      security:
      - bearer_auth: []
      description: Updates a Promotion Rule
      operationId: update-promotion-rule
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_promotion_rule_params"
    delete:
      summary: Delete a Promotion Rule
      tags:
      - Promotion Rules
      security:
      - bearer_auth: []
      description: Deletes a Promotion Rule
      operationId: delete-promotion-rule
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/promotions":
    get:
      summary: Return a list of Promotions
      tags:
      - Promotions
      security:
      - bearer_auth: []
      description: Returns a list of Promotions
      operationId: promotions-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: promotion_category,promotion_rules,promotion_actions,stores
        schema:
          type: string
      - name: filter[code_eq]
        in: query
        description: ''
        example: BLK-FRI
        schema:
          type: string
      - name: filter[name_cont]
        in: query
        description: ''
        example: New Customer
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Promotion
      tags:
      - Promotions
      security:
      - bearer_auth: []
      description: Creates a Promotion
      operationId: create-promotion
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: promotion_category,promotion_rules,promotion_actions,stores
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_promotion_params"
  "/api/v2/platform/promotions/{id}":
    get:
      summary: Return a Promotion
      tags:
      - Promotions
      security:
      - bearer_auth: []
      description: Returns a Promotion
      operationId: show-promotion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: promotion_category,promotion_rules,promotion_actions,stores
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Promotion
      tags:
      - Promotions
      security:
      - bearer_auth: []
      description: Updates a Promotion
      operationId: update-promotion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: promotion_category,promotion_rules,promotion_actions,stores
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - "$ref": "#/components/schemas/update_promotion_params"
              - "$ref": "#/components/schemas/update_promotion_add_rule_params"
              - "$ref": "#/components/schemas/update_promotion_update_rule_params"
              - "$ref": "#/components/schemas/update_promotion_add_action_params"
              - "$ref": "#/components/schemas/update_promotion_change_action_params"
              - "$ref": "#/components/schemas/update_promotion_action_calculator_params"
              - "$ref": "#/components/schemas/update_promotion_change_calculator_params"
    delete:
      summary: Delete a Promotion
      tags:
      - Promotions
      security:
      - bearer_auth: []
      description: Deletes a Promotion
      operationId: delete-promotion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/roles":
    get:
      summary: Return a list of Roles
      tags:
      - Roles
      security:
      - bearer_auth: []
      description: Returns a list of Roles
      operationId: roles-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: filter[name_eq]
        in: query
        description: ''
        example: admin
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Role
      tags:
      - Roles
      security:
      - bearer_auth: []
      description: Creates a Role
      operationId: create-role
      parameters: []
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_role_params"
  "/api/v2/platform/roles/{id}":
    get:
      summary: Return a Role
      tags:
      - Roles
      security:
      - bearer_auth: []
      description: Returns a Role
      operationId: show-role
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Role
      tags:
      - Roles
      security:
      - bearer_auth: []
      description: Updates a Role
      operationId: update-role
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_role_params"
    delete:
      summary: Delete a Role
      tags:
      - Roles
      security:
      - bearer_auth: []
      description: Deletes a Role
      operationId: delete-role
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/shipments":
    get:
      summary: Return a list of Shipments
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: Returns a list of Shipments
      operationId: shipments-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      - name: filter[state_eq]
        in: query
        description: ''
        example: complete
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Shipment
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: Creates a Shipment
      operationId: create-shipment
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_shipment_params"
  "/api/v2/platform/shipments/{id}":
    get:
      summary: Return a Shipment
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: Returns a Shipment
      operationId: show-shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Shipment
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: Updates a Shipment
      operationId: update-shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_shipment_params"
    delete:
      summary: Delete a Shipment
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: Deletes a Shipment
      operationId: delete-shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/shipments/{id}/add_item":
    patch:
      summary: Adds item (Variant) to an existing Shipment
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: If selected Variant was already added to Order it will increase
        the quantity of existing Line Item, if not it will create a new Line Item
      operationId: add-item-shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/add_item_shipment_params"
  "/api/v2/platform/shipments/{id}/remove_item":
    patch:
      summary: Removes item (Variant) from Shipment
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: If selected Variant is removed completely and Shipment doesn't
        include any other Line Items, Shipment itself will be deleted
      operationId: remove-item-shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/remove_item_shipment_params"
  "/api/v2/platform/shipments/{id}/ready":
    patch:
      summary: Mark Shipment as ready to be shipped
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: Marks Shipment as ready to be shipped
      operationId: ready-shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/shipments/{id}/ship":
    patch:
      summary: Mark Shipment as shipped
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: Marks Shipment as shipped
      operationId: ship-shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/shipments/{id}/cancel":
    patch:
      summary: Cancels the Shipment
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: Cancels the Shipment
      operationId: cancel-shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/shipments/{id}/resume":
    patch:
      summary: Resumes the Shipment
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: Resumes previously canceled Shipment
      operationId: resume-shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/shipments/{id}/pend":
    patch:
      summary: Moves Shipment back to pending state
      tags:
      - Shipments
      security:
      - bearer_auth: []
      description: Moves Shipment back to pending state
      operationId: pend-shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: line_items,variants,product
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/shipping_categories":
    get:
      summary: Return a list of Shipping Categories
      tags:
      - Shipping Categories
      security:
      - bearer_auth: []
      description: Returns a list of Shipping Categories
      operationId: shipping-categories-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: filter[name_i_cont]
        in: query
        description: ''
        example: default
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Shipping Category
      tags:
      - Shipping Categories
      security:
      - bearer_auth: []
      description: Creates a Shipping Category
      operationId: create-shipping-category
      parameters: []
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_shipping_category_params"
  "/api/v2/platform/shipping_categories/{id}":
    get:
      summary: Return a Shipping Category
      tags:
      - Shipping Categories
      security:
      - bearer_auth: []
      description: Returns a Shipping Category
      operationId: show-shipping-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Shipping Category
      tags:
      - Shipping Categories
      security:
      - bearer_auth: []
      description: Updates a Shipping Category
      operationId: update-shipping-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_shipping_category_params"
    delete:
      summary: Delete a Shipping Category
      tags:
      - Shipping Categories
      security:
      - bearer_auth: []
      description: Deletes a Shipping Category
      operationId: delete-shipping-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/shipping_methods":
    get:
      summary: Return a list of Shipping Methods
      tags:
      - Shipping Methods
      security:
      - bearer_auth: []
      description: Returns a list of Shipping Methods
      operationId: shipping-methods-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: calculator,shipping_categories,shipping_rates,tax_category
        schema:
          type: string
      - name: filter[name]
        in: query
        description: ''
        example: DHL Express
        schema:
          type: string
      - name: filter[title_cont]
        in: query
        description: ''
        example: About Us
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Shipping Method
      tags:
      - Shipping Methods
      security:
      - bearer_auth: []
      description: Creates a Shipping Method
      operationId: create-shipping-method
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: calculator,shipping_categories,shipping_rates,tax_category
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_shipping_method_params"
  "/api/v2/platform/shipping_methods/{id}":
    get:
      summary: Return a Shipping Method
      tags:
      - Shipping Methods
      security:
      - bearer_auth: []
      description: Returns a Shipping Method
      operationId: show-shipping-method
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: calculator,shipping_categories,shipping_rates,tax_category
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Shipping Method
      tags:
      - Shipping Methods
      security:
      - bearer_auth: []
      description: Updates a Shipping Method
      operationId: update-shipping-method
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: calculator,shipping_categories,shipping_rates,tax_category
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_shipping_method_params"
    delete:
      summary: Delete a Shipping Method
      tags:
      - Shipping Methods
      security:
      - bearer_auth: []
      description: Deletes a Shipping Method
      operationId: delete-shipping-method
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/states":
    get:
      summary: Returns a list of States
      tags:
      - States
      security:
      - bearer_auth: []
      operationId: states-list
      description: Returns a list of States
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: country
        schema:
          type: string
      - name: filter[country_id_eq]
        in: query
        description: ''
        example: '4'
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
  "/api/v2/platform/states/{id}":
    get:
      summary: Returns a State
      tags:
      - States
      security:
      - bearer_auth: []
      operationId: show-state
      description: Returns a State
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/stock_items":
    get:
      summary: Return a list of Stock Items
      tags:
      - Stock Items
      security:
      - bearer_auth: []
      description: Returns a list of Stock Items
      operationId: stock-items-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: stock_location,variant
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Stock Item
      tags:
      - Stock Items
      security:
      - bearer_auth: []
      description: Creates a Stock Item
      operationId: create-stock-item
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: stock_location,variant
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_stock_item_params"
  "/api/v2/platform/stock_items/{id}":
    get:
      summary: Return a Stock Item
      tags:
      - Stock Items
      security:
      - bearer_auth: []
      description: Returns a Stock Item
      operationId: show-stock-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: stock_location,variant
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Stock Item
      tags:
      - Stock Items
      security:
      - bearer_auth: []
      description: Updates a Stock Item
      operationId: update-stock-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: stock_location,variant
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_stock_item_params"
    delete:
      summary: Delete a Stock Item
      tags:
      - Stock Items
      security:
      - bearer_auth: []
      description: Deletes a Stock Item
      operationId: delete-stock-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/stock_locations":
    get:
      summary: Return a list of Stock Locations
      tags:
      - Stock Locations
      security:
      - bearer_auth: []
      description: Returns a list of Stock Locations
      operationId: stock-locations-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: country
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Stock Location
      tags:
      - Stock Locations
      security:
      - bearer_auth: []
      description: Creates a Stock Location
      operationId: create-stock-location
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: country
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_stock_location_params"
  "/api/v2/platform/stock_locations/{id}":
    get:
      summary: Return a Stock Location
      tags:
      - Stock Locations
      security:
      - bearer_auth: []
      description: Returns a Stock Location
      operationId: show-stock-location
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: country
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Stock Location
      tags:
      - Stock Locations
      security:
      - bearer_auth: []
      description: Updates a Stock Location
      operationId: update-stock-location
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: country
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_stock_location_params"
    delete:
      summary: Delete a Stock Location
      tags:
      - Stock Locations
      security:
      - bearer_auth: []
      description: Deletes a Stock Location
      operationId: delete-stock-location
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/store_credit_categories":
    get:
      summary: Return a list of Store Credit Categories
      tags:
      - Store Credit Categories
      security:
      - bearer_auth: []
      description: Returns a list of Store Credit Categories
      operationId: store-credit-categories-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: filter[name_eq]
        in: query
        description: ''
        example: refunded
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Store Credit Category
      tags:
      - Store Credit Categories
      security:
      - bearer_auth: []
      description: Creates a Store Credit Category
      operationId: create-store-credit-category
      parameters: []
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_store_credit_category_params"
  "/api/v2/platform/store_credit_categories/{id}":
    get:
      summary: Return a Store Credit Category
      tags:
      - Store Credit Categories
      security:
      - bearer_auth: []
      description: Returns a Store Credit Category
      operationId: show-store-credit-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Store Credit Category
      tags:
      - Store Credit Categories
      security:
      - bearer_auth: []
      description: Updates a Store Credit Category
      operationId: update-store-credit-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_store_credit_category_params"
    delete:
      summary: Delete a Store Credit Category
      tags:
      - Store Credit Categories
      security:
      - bearer_auth: []
      description: Deletes a Store Credit Category
      operationId: delete-store-credit-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/store_credit_types":
    get:
      summary: Return a list of Store Credit Types
      tags:
      - Store Credit Types
      security:
      - bearer_auth: []
      description: Returns a list of Store Credit Types
      operationId: store-credit-types-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Store Credit Type
      tags:
      - Store Credit Types
      security:
      - bearer_auth: []
      description: Creates a Store Credit Type
      operationId: create-store-credit-type
      parameters: []
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_store_credit_type_params"
  "/api/v2/platform/store_credit_types/{id}":
    get:
      summary: Return a Store Credit Type
      tags:
      - Store Credit Types
      security:
      - bearer_auth: []
      description: Returns a Store Credit Type
      operationId: show-store-credit-type
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Store Credit Type
      tags:
      - Store Credit Types
      security:
      - bearer_auth: []
      description: Updates a Store Credit Type
      operationId: update-store-credit-type
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_store_credit_type_params"
    delete:
      summary: Delete a Store Credit Type
      tags:
      - Store Credit Types
      security:
      - bearer_auth: []
      description: Deletes a Store Credit Type
      operationId: delete-store-credit-type
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/store_credits":
    get:
      summary: Return a list of Store Credits
      tags:
      - Store Credits
      security:
      - bearer_auth: []
      description: Returns a list of Store Credits
      operationId: store-credits-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user,created_by,category,credit_type
        schema:
          type: string
      - name: filter[user_id_eq]
        in: query
        description: ''
        example: '5'
        schema:
          type: string
      - name: filter[created_by_id_eq]
        in: query
        description: ''
        example: '2'
        schema:
          type: string
      - name: filter[amount_gteq]
        in: query
        description: ''
        example: '50.0'
        schema:
          type: string
      - name: filter[currency_eq]
        in: query
        description: ''
        example: USD
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Store Credit
      tags:
      - Store Credits
      security:
      - bearer_auth: []
      description: Creates a Store Credit
      operationId: create-store-credit
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user,created_by,category,credit_type
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_store_credit_params"
  "/api/v2/platform/store_credits/{id}":
    get:
      summary: Return a Store Credit
      tags:
      - Store Credits
      security:
      - bearer_auth: []
      description: Returns a Store Credit
      operationId: show-store-credit
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user,created_by,category,credit_type
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Store Credit
      tags:
      - Store Credits
      security:
      - bearer_auth: []
      description: Updates a Store Credit
      operationId: update-store-credit
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: user,created_by,category,credit_type
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_store_credit_params"
    delete:
      summary: Delete a Store Credit
      tags:
      - Store Credits
      security:
      - bearer_auth: []
      description: Deletes a Store Credit
      operationId: delete-store-credit
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/tax_categories":
    get:
      summary: Return a list of Tax Categories
      tags:
      - Tax Categories
      security:
      - bearer_auth: []
      description: Returns a list of Tax Categories
      operationId: tax-categories-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: tax_rates
        schema:
          type: string
      - name: filter[name_eq]
        in: query
        description: ''
        example: Clothing
        schema:
          type: string
      - name: filter[is_default_true]
        in: query
        description: ''
        example: '1'
        schema:
          type: string
      - name: filter[tax_code_eq]
        in: query
        description: ''
        example: 1257L
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Tax Category
      tags:
      - Tax Categories
      security:
      - bearer_auth: []
      description: Creates a Tax Category
      operationId: create-tax-category
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: tax_rates
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_tax_category_params"
  "/api/v2/platform/tax_categories/{id}":
    get:
      summary: Return a Tax Category
      tags:
      - Tax Categories
      security:
      - bearer_auth: []
      description: Returns a Tax Category
      operationId: show-tax-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: tax_rates
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Tax Category
      tags:
      - Tax Categories
      security:
      - bearer_auth: []
      description: Updates a Tax Category
      operationId: update-tax-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: tax_rates
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_tax_category_params"
    delete:
      summary: Delete a Tax Category
      tags:
      - Tax Categories
      security:
      - bearer_auth: []
      description: Deletes a Tax Category
      operationId: delete-tax-category
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/tax_rates":
    get:
      summary: Return a list of Tax Rates
      tags:
      - Tax Rates
      security:
      - bearer_auth: []
      description: Returns a list of Tax Rates
      operationId: tax-rates-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: zone,tax_category
        schema:
          type: string
      - name: filter[zone_id_eq]
        in: query
        description: ''
        example: '3'
        schema:
          type: string
      - name: filter[amount_gt]
        in: query
        description: ''
        example: '0.05'
        schema:
          type: string
      - name: filter[tax_category_id_eq]
        in: query
        description: ''
        example: '1'
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Tax Rate
      tags:
      - Tax Rates
      security:
      - bearer_auth: []
      description: Creates a Tax Rate
      operationId: create-tax-rate
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: zone,tax_category
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_tax_rate_params"
  "/api/v2/platform/tax_rates/{id}":
    get:
      summary: Return a Tax Rate
      tags:
      - Tax Rates
      security:
      - bearer_auth: []
      description: Returns a Tax Rate
      operationId: show-tax-rate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: zone,tax_category
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Tax Rate
      tags:
      - Tax Rates
      security:
      - bearer_auth: []
      description: Updates a Tax Rate
      operationId: update-tax-rate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: zone,tax_category
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_tax_rate_params"
    delete:
      summary: Delete a Tax Rate
      tags:
      - Tax Rates
      security:
      - bearer_auth: []
      description: Deletes a Tax Rate
      operationId: delete-tax-rate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/taxonomies":
    get:
      summary: Return a list of Taxonomies
      tags:
      - Taxonomies
      security:
      - bearer_auth: []
      description: Returns a list of Taxonomies
      operationId: taxonomies-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: taxons,root
        schema:
          type: string
      - name: filter[name_eq]
        in: query
        description: ''
        example: Categories
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Taxonomy
      tags:
      - Taxonomies
      security:
      - bearer_auth: []
      description: Creates a Taxonomy
      operationId: create-taxonomy
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: taxons,root
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_taxonomy_params"
  "/api/v2/platform/taxonomies/{id}":
    get:
      summary: Return a Taxonomy
      tags:
      - Taxonomies
      security:
      - bearer_auth: []
      description: Returns a Taxonomy
      operationId: show-taxonomy
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: taxons,root
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Taxonomy
      tags:
      - Taxonomies
      security:
      - bearer_auth: []
      description: Updates a Taxonomy
      operationId: update-taxonomy
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: taxons,root
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_taxonomy_params"
    delete:
      summary: Delete a Taxonomy
      tags:
      - Taxonomies
      security:
      - bearer_auth: []
      description: Deletes a Taxonomy
      operationId: delete-taxonomy
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/taxons":
    get:
      summary: Return a list of Taxons
      tags:
      - Taxons
      security:
      - bearer_auth: []
      description: Returns a list of Taxons
      operationId: taxons-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: taxonomy,parent,children
        schema:
          type: string
      - name: filter[taxonomy_id_eq]
        in: query
        description: ''
        example: '1'
        schema:
          type: string
      - name: filter[name_cont]
        in: query
        description: ''
        example: Shirts
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Taxon
      tags:
      - Taxons
      security:
      - bearer_auth: []
      description: Creates a Taxon
      operationId: create-taxon
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: taxonomy,parent,children
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_taxon_params"
  "/api/v2/platform/taxons/{id}":
    get:
      summary: Return a Taxon
      tags:
      - Taxons
      security:
      - bearer_auth: []
      description: Returns a Taxon
      operationId: show-taxon
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: taxonomy,parent,children
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Taxon
      tags:
      - Taxons
      security:
      - bearer_auth: []
      description: Updates a Taxon
      operationId: update-taxon
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: taxonomy,parent,children
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_taxon_params"
    delete:
      summary: Delete a Taxon
      tags:
      - Taxons
      security:
      - bearer_auth: []
      description: Deletes a Taxon
      operationId: delete-taxon
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/taxons/{id}/reposition":
    patch:
      summary: Reposition a Taxon
      tags:
      - Taxons
      security:
      - bearer_auth: []
      operationId: reposition-taxon
      description: Reposition a Taxon
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/taxon_reposition"
  "/api/v2/platform/users":
    get:
      summary: Return a list of Users
      tags:
      - Users
      security:
      - bearer_auth: []
      description: Returns a list of Users
      operationId: users-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: ship_address,bill_address
        schema:
          type: string
      - name: filter[user_id_eq]
        in: query
        description: ''
        example: '1'
        schema:
          type: string
      - name: filter[email_cont]
        in: query
        description: ''
        example: spree@example.com
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a User
      tags:
      - Users
      security:
      - bearer_auth: []
      description: Creates a User
      operationId: create-user
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: ship_address,bill_address
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_user_params"
  "/api/v2/platform/users/{id}":
    get:
      summary: Return a User
      tags:
      - Users
      security:
      - bearer_auth: []
      description: Returns a User
      operationId: show-user
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: ship_address,bill_address
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a User
      tags:
      - Users
      security:
      - bearer_auth: []
      description: Updates a User
      operationId: update-user
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: ship_address,bill_address
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_user_params"
    delete:
      summary: Delete a User
      tags:
      - Users
      security:
      - bearer_auth: []
      description: Deletes a User
      operationId: delete-user
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/variants":
    get:
      summary: Return a list of Variants
      tags:
      - Variants
      security:
      - bearer_auth: []
      description: Returns a list of Variants
      operationId: variants-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: product,tax_category,images,digitals
        schema:
          type: string
      - name: filter[product_id_eq]
        in: query
        description: ''
        example: '1'
        schema:
          type: string
      - name: filter[sku_i_cont]
        in: query
        description: ''
        example: SKU123
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
  "/api/v2/platform/variants/{id}":
    get:
      summary: Return a Variant
      tags:
      - Variants
      security:
      - bearer_auth: []
      description: Returns a Variant
      operationId: show-variant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: product,tax_category,images,digitals
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    delete:
      summary: Delete a Variant
      tags:
      - Variants
      security:
      - bearer_auth: []
      description: Deletes a Variant
      operationId: delete-variant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/webhooks/events":
    get:
      summary: Return a list of Webhook Events
      tags:
      - Webhook Events
      security:
      - bearer_auth: []
      description: Returns a list of Webhook Events
      operationId: webhook-events-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: subscriber
        schema:
          type: string
      - name: filter[name_eq]
        in: query
        description: ''
        example: order.canceled
        schema:
          type: string
      - name: filter[request_errors_cont]
        in: query
        description: ''
        example: google
        schema:
          type: string
      - name: filter[response_code_eq]
        in: query
        description: ''
        example: '200'
        schema:
          type: string
      - name: filter[success_eq]
        in: query
        description: ''
        example: 'true'
        schema:
          type: string
      - name: filter[url_cont]
        in: query
        description: ''
        example: mysite
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
  "/api/v2/platform/webhooks/subscribers":
    get:
      summary: Return a list of Webhook Subscribers
      tags:
      - Webhook Subscribers
      security:
      - bearer_auth: []
      description: Returns a list of Webhook Subscribers
      operationId: webhook-subscribers-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: filter[active_eq]
        in: query
        description: ''
        example: 'true'
        schema:
          type: string
      - name: filter[url_cont]
        in: query
        description: ''
        example: mysite
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Webhook Subscriber
      tags:
      - Webhook Subscribers
      security:
      - bearer_auth: []
      description: Creates a Webhook Subscriber
      operationId: create-webhook-subscriber
      parameters: []
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_webhook_subscriber_params"
  "/api/v2/platform/webhooks/subscribers/{id}":
    get:
      summary: Return a Webhook Subscriber
      tags:
      - Webhook Subscribers
      security:
      - bearer_auth: []
      description: Returns a Webhook Subscriber
      operationId: show-webhook-subscriber
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Webhook Subscriber
      tags:
      - Webhook Subscribers
      security:
      - bearer_auth: []
      description: Updates a Webhook Subscriber
      operationId: update-webhook-subscriber
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_webhook_subscriber_params"
    delete:
      summary: Delete a Webhook Subscriber
      tags:
      - Webhook Subscribers
      security:
      - bearer_auth: []
      description: Deletes a Webhook Subscriber
      operationId: delete-webhook-subscriber
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/wished_items":
    get:
      summary: Return a list of Wished Items
      tags:
      - Wished Items
      security:
      - bearer_auth: []
      description: Returns a list of Wished Items
      operationId: wished-items-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: variant
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Wished Item
      tags:
      - Wished Items
      security:
      - bearer_auth: []
      description: Creates a Wished Item
      operationId: create-wished-item
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: variant
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_wished_item_params"
  "/api/v2/platform/wished_items/{id}":
    get:
      summary: Return a Wished Item
      tags:
      - Wished Items
      security:
      - bearer_auth: []
      description: Returns a Wished Item
      operationId: show-wished-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: variant
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Wished Item
      tags:
      - Wished Items
      security:
      - bearer_auth: []
      description: Updates a Wished Item
      operationId: update-wished-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: variant
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_wished_item_params"
    delete:
      summary: Delete a Wished Item
      tags:
      - Wished Items
      security:
      - bearer_auth: []
      description: Deletes a Wished Item
      operationId: delete-wished-item
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/wishlists":
    get:
      summary: Return a list of Wishlists
      tags:
      - Wishlists
      security:
      - bearer_auth: []
      description: Returns a list of Wishlists
      operationId: wishlists-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: wished_items
        schema:
          type: string
      - name: filter[name_cont]
        in: query
        description: ''
        example: Birthday
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Wishlist
      tags:
      - Wishlists
      security:
      - bearer_auth: []
      description: Creates a Wishlist
      operationId: create-wishlist
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: wished_items
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_wishlist_params"
  "/api/v2/platform/wishlists/{id}":
    get:
      summary: Return a Wishlist
      tags:
      - Wishlists
      security:
      - bearer_auth: []
      description: Returns a Wishlist
      operationId: show-wishlist
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: wished_items
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Wishlist
      tags:
      - Wishlists
      security:
      - bearer_auth: []
      description: Updates a Wishlist
      operationId: update-wishlist
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: wished_items
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_wishlist_params"
    delete:
      summary: Delete a Wishlist
      tags:
      - Wishlists
      security:
      - bearer_auth: []
      description: Deletes a Wishlist
      operationId: delete-wishlist
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
  "/api/v2/platform/zones":
    get:
      summary: Return a list of Zones
      tags:
      - Zones
      security:
      - bearer_auth: []
      description: Returns a list of Zones
      operationId: zones-list
      parameters:
      - name: page
        in: query
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        example: 50
        schema:
          type: integer
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: zone_members
        schema:
          type: string
      - name: filter[description_eq]
        in: query
        description: ''
        example: The zone containing all EU countries
        schema:
          type: string
      responses:
        '200':
          description: Records returned
        '401':
          description: Authentication Failed
    post:
      summary: Create a Zone
      tags:
      - Zones
      security:
      - bearer_auth: []
      description: Creates a Zone
      operationId: create-zone
      parameters:
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: zone_members
        schema:
          type: string
      responses:
        '201':
          description: Record created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_zone_params"
  "/api/v2/platform/zones/{id}":
    get:
      summary: Return a Zone
      tags:
      - Zones
      security:
      - bearer_auth: []
      description: Returns a Zone
      operationId: show-zone
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: zone_members
        schema:
          type: string
      responses:
        '200':
          description: Record found
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
    patch:
      summary: Update a Zone
      tags:
      - Zones
      security:
      - bearer_auth: []
      description: Updates a Zone
      operationId: update-zone
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: 'Select which associated resources you would like to fetch, see:
          <a href="https://jsonapi.org/format/#fetching-includes">https://jsonapi.org/format/#fetching-includes</a>'
        example: zone_members
        schema:
          type: string
      responses:
        '200':
          description: Record updated
        '422':
          description: Invalid request
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_zone_params"
    delete:
      summary: Delete a Zone
      tags:
      - Zones
      security:
      - bearer_auth: []
      description: Deletes a Zone
      operationId: delete-zone
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Record deleted
        '404':
          description: Record not found
        '401':
          description: Authentication Failed
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
tags:
- name: Addresses
- name: Adjustments
- name: Classifications
- name: Countries
- name: CMS Pages
- name: CMS Sections
- name: Digital Assets
- name: Digital Links
- name: Line Items
- name: Menus
- name: Menu Items
- name: Option Types
- name: Option Values
- name: Orders
- name: Payments
- name: Payment Methods
- name: Promotions
- name: Promotion Actions
- name: Promotion Categories
- name: Promotion Rules
- name: Roles
- name: Shipments
- name: Shipping Categories
- name: Shipping Methods
- name: Stock Items
- name: Stock Locations
- name: Store Credit Categories
- name: Store Credit Types
- name: Store Credits
- name: Tax Categories
- name: Tax Rates
- name: Taxons
- name: Taxonomies
- name: Users
- name: Webhook Events
- name: Webhook Subscribers
- name: Wishlists
- name: Wished Items
- name: Variants
- name: Zones
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
  schemas:
    create_address_params:
      type: object
      properties:
        address:
          type: object
          required:
          - country_id
          - address1
          - city
          - zipcode
          - phone
          - firstname
          - lastname
          properties:
            country_id:
              type: string
              example: '224'
            state_id:
              type: string
              example: '516'
            state_name:
              type: string
              example: New York
            address1:
              type: string
              example: 5th ave
            address2:
              type: string
              example: 1st suite
            city:
              type: string
              example: NY
            zipcode:
              type: string
              example: '10001'
            phone:
              type: string
              example: "+1 123 456 789"
            alternative_phone:
              type: string
            firstname:
              type: string
              example: John
            lastname:
              type: string
              example: Snow
            label:
              type: string
              example: My home address
            company:
              type: string
              example: Vendo Cloud Inc
            user_id:
              type: string
            public_metadata:
              type: object
              example:
                distance_from_nearest_city_in_km: 10
                location_type: building
            private_metadata:
              type: object
              example:
                close_to_shop: true
      required:
      - address
      x-internal: true
    update_address_params:
      type: object
      properties:
        address:
          type: object
          properties:
            country_id:
              type: string
              example: '224'
            state_id:
              type: string
              example: '516'
            state_name:
              type: string
              example: New York
            address1:
              type: string
              example: 5th ave
            address2:
              type: string
              example: 1st suite
            city:
              type: string
              example: NY
            zipcode:
              type: string
              example: '10001'
            phone:
              type: string
              example: "+1 123 456 789"
            alternative_phone:
              type: string
            firstname:
              type: string
              example: John
            lastname:
              type: string
              example: Snow
            label:
              type: string
              example: My home address
            company:
              type: string
              example: Vendo Cloud Inc
            user_id:
              type: string
            public_metadata:
              type: object
              example:
                distance_from_city_in_km: 10
                location_type: building
            private_metadata:
              type: object
              example:
                close_to_shop: true
      required:
      - address
      x-internal: true
    create_adjustment_params:
      type: object
      properties:
        adjustment:
          type: object
          required:
          - order_id
          - label
          - adjustable_id
          - adjustable_type
          properties:
            order_id:
              type: string
            label:
              type: string
              example: Shipping costs
            adjustable_id:
              type: string
            adjustable_type:
              type: string
              example: Spree::LineItem
            source_id:
              type: string
            source_type:
              type: string
              example: Spree::TaxRate
            amount:
              type: number
              example: 10.9
            mandatory:
              type: boolean
            eligible:
              type: boolean
            state:
              type: string
              example: closed
              default: open
              enum:
              - closed
              - open
            included:
              type: boolean
              example: true
              default: false
      required:
      - adjustment
      x-internal: true
    update_adjustment_params:
      type: object
      properties:
        adjustment:
          type: object
          properties:
            order_id:
              type: string
            label:
              type: string
              example: Shipping costs
            adjustable_id:
              type: string
            adjustable_type:
              type: string
              example: Spree::LineItem
            source_id:
              type: string
            source_type:
              type: string
              example: Spree::TaxRate
            amount:
              type: number
              example: 10.9
            mandatory:
              type: boolean
            eligible:
              type: boolean
            state:
              type: string
              example: closed
              default: open
              enum:
              - closed
              - open
            included:
              type: boolean
              example: true
              default: false
      required:
      - adjustment
      x-internal: true
    create_classification_params:
      type: object
      properties:
        classification:
          type: object
          required:
          - product_id
          - taxon_id
          - position
          properties:
            product_id:
              type: string
              example: '1'
            taxon_id:
              type: string
              example: '1'
            position:
              type: integer
              example: 1
      required:
      - classification
      x-internal: true
    update_classification_params:
      type: object
      properties:
        classification:
          type: object
          properties:
            product_id:
              type: string
              example: '1'
            taxon_id:
              type: string
              example: '1'
            position:
              type: integer
              example: 1
      required:
      - classification
      x-internal: true
    create_standard_cms_page_params:
      type: object
      properties:
        cms_page:
          type: object
          required:
          - title
          - locale
          - type
          properties:
            title:
              type: string
              example: About Us
              description: Give your page a title.
            type:
              type: string
              enum:
              - Spree::Cms::Pages::StandardPage
              description: Set the type of page.
            meta_title:
              type: string
              nullable: true
              example: Learn More About Super-Shop
              description: Set the meta title for this page, this appears in the title
                bar of the browser.
            content:
              type: string
              nullable: true
              example: Lot's of text..
              description: The text content of a standard page, this can be HTML from
                a rich text editor.
            meta_description:
              type: string
              nullable: true
              example: Learn more about us on this page here...
              description: Set a meta description, used for SEO and displayed in search
                results.
            visible:
              type: boolean
              enum:
              - true
              - false
              description: This page is publicly visible when set to `true`.
            slug:
              type: string
              nullable: true
              example: about-us
              description: Set a slug for this page.
            locale:
              type: string
              example: en-US
              description: The language this page is written in.
      required:
      - cms_page
      title: Create a Standard Page
      x-internal: true
    create_homepage_cms_page_params:
      type: object
      properties:
        cms_page:
          type: object
          required:
          - title
          - locale
          - type
          properties:
            title:
              type: string
              example: Our Flash Homepage
              description: Give your page a title.
            type:
              type: string
              enum:
              - Spree::Cms::Pages::Homepage
              description: Set the type of page.
            meta_title:
              type: string
              nullable: true
              example: Visit Our Store - Great Deals
              description: Set the meta title for this page, this appears in the title
                bar of the browser.
            meta_description:
              type: string
              nullable: true
              example: Discover great new products that we sell in this store...
              description: Set a meta description, used for SEO and displayed in search
                results.
            visible:
              type: boolean
              enum:
              - true
              - false
              description: This page is publicly visible when set to `true`.
            locale:
              type: string
              example: en-US
              description: The language this page is written in.
      required:
      - cms_page
      title: Create a Homepage
      x-internal: true
    create_feature_cms_page_params:
      type: object
      properties:
        cms_page:
          type: object
          required:
          - title
          - locale
          - type
          properties:
            title:
              type: string
              example: Featured Product
              description: Give your page a title.
            type:
              type: string
              enum:
              - Spree::Cms::Pages::FeaturePage
              description: Set the type of page.
            meta_title:
              type: string
              nullable: true
              example: Learn More About This Featured Product
              description: Set the meta title for this page, this appears in the title
                bar of the browser.
            meta_description:
              type: string
              nullable: true
              example: Learn more about us this amazing product that we sell right
                here...
              description: Set a meta description, used for SEO and displayed in search
                results.
            visible:
              type: boolean
              enum:
              - true
              - false
              description: This page is publicly visible when set to `true`.
            slug:
              type: string
              nullable: true
              example: about-us
              description: Set a slug for this page.
            locale:
              type: string
              example: en-US
              description: The language this page is written in.
      required:
      - cms_page
      title: Create a Feature Page
      x-internal: true
    update_standard_cms_page_params:
      type: object
      properties:
        cms_page:
          type: object
          properties:
            title:
              type: string
              example: About Us
              description: Update the page title.
            type:
              type: string
              enum:
              - Spree::Cms::Pages::StandardPage
              - Spree::Cms::Pages::Homepage
              - Spree::Cms::Pages::FeaturePage
              description: Change the type of page.
            meta_title:
              type: string
              nullable: true
              example: Learn More About Super-Shop
              description: Update the meta title for this page, this appears in the
                title bar of the browser.
            content:
              type: string
              nullable: true
              example: Lot's of text..
              description: Update the text content of a standard page, this can be
                HTML from a rich text editor.
            meta_description:
              type: string
              nullable: true
              example: Learn more about us on this page here...
              description: Update the meta description, used for SEO and displayed
                in search results.
            visible:
              type: boolean
              enum:
              - true
              - false
              description: This page is publicly visible when set to `true`.
            slug:
              type: string
              nullable: true
              example: about-us
              description: Update the slug for this page.
            locale:
              type: string
              example: en-US
              description: Update the language of this page.
      required:
      - cms_page
      title: Update a Standard Page
      x-internal: true
    update_homepage_cms_page_params:
      type: object
      properties:
        cms_page:
          type: object
          properties:
            title:
              type: string
              example: Our Flash Homepage
              description: Update the page title.
            type:
              type: string
              enum:
              - Spree::Cms::Pages::StandardPage
              - Spree::Cms::Pages::Homepage
              - Spree::Cms::Pages::FeaturePage
              description: Change the type of page.
            meta_title:
              type: string
              nullable: true
              example: Visit Our Store - Great Deals
              description: Update the meta title for this page, this appears in the
                title bar of the browser.
            meta_description:
              type: string
              nullable: true
              example: Discover great new products that we sell in this store...
              description: Update the meta description, used for SEO and displayed
                in search results.
            visible:
              type: boolean
              enum:
              - true
              - false
              description: This page is publicly visible when set to `true`.
            locale:
              type: string
              example: en-US
              description: Update the language of this page.
      required:
      - cms_page
      title: Update a Homepage
      x-internal: true
    update_feature_cms_page_params:
      type: object
      properties:
        cms_page:
          type: object
          properties:
            title:
              type: string
              example: Featured Product
              description: Update the page title.
            type:
              type: string
              enum:
              - Spree::Cms::Pages::StandardPage
              - Spree::Cms::Pages::Homepage
              - Spree::Cms::Pages::FeaturePage
              description: Change the type of page.
            meta_title:
              type: string
              nullable: true
              example: Learn More About This Featured Product
              description: Update the meta title for this page, this appears in the
                title bar of the browser.
            meta_description:
              type: string
              nullable: true
              example: Learn more about us this amazing product that we sell right
                here...
              description: Update the meta description, used for SEO and displayed
                in search results.
            visible:
              type: boolean
              enum:
              - true
              - false
              description: This page is publicly visible when set to `true`.
            slug:
              type: string
              nullable: true
              example: about-us
              description: Update the slug for this page.
            locale:
              type: string
              example: en-US
              description: Update the language of this page.
      required:
      - cms_page
      title: Update a Feature Page
      x-internal: true
    create_hero_image_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          required:
          - name
          - cms_page_id
          - type
          properties:
            name:
              type: string
              description: Give this section a name.
            cms_page_id:
              type: string
              description: Set the `cms_page` ID that this section belongs to.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::HeroImage
              example: Spree::Cms::Sections::HeroImage
              description: Set the section type.
            linked_resource_type:
              type: string
              example: Spree::Taxon
              nullable: true
              enum:
              - Spree::Taxon
              - Spree::Product
              - Spree::CmsPage
              description: Set the resource type that this section links to.
            linked_resource_id:
              type: string
              example: '1'
              nullable: true
              description: Set the ID of the resource that you would like this section
                to link to.
            fit:
              type: string
              example: Screen
              enum:
              - Screen
              - Container
              description: This value is used by front end developers to set CSS classes
                for content that fits the screen edge-to-edge, or stays within the
                boundaries of the central container.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            gutters:
              type: string
              example: No Gutters
              enum:
              - Gutters
              - No Gutters
              description: This value is used by front end developers for styling
                the section padding.
            button_text:
              type: string
              example: Click Here
              description: Set the text value of the button used in this section.
            title:
              type: string
              example: Shop Today
              description: Create a title for the Hero Section.
            cms_section[image_one]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
      required:
      - cms_section
      title: Create a Hero Image Section
      x-internal: true
    create_product_carousel_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          required:
          - name
          - cms_page_id
          - type
          properties:
            name:
              type: string
              description: Give this section a name.
            cms_page_id:
              type: string
              description: Set the `cms_page` ID that this section belongs to.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::ProductCarousel
              example: Spree::Cms::Sections::ProductCarousel
              description: Set the section type.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            linked_resource_id:
              type: string
              example: '1'
              nullable: true
              description: Set the ID of the Taxon that you would like displayed as
                a Product Carousel.
      required:
      - cms_section
      title: Create a Product Carousel Section
      x-internal: true
    create_side_by_side_images_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          required:
          - name
          - cms_page_id
          - type
          properties:
            name:
              type: string
              description: Give this section a name.
            cms_page_id:
              type: string
              description: Set the `cms_page` ID that this section belongs to.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::SideBySideImages
              example: Spree::Cms::Sections::SideBySideImages
              description: Set the section type.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            link_type_one:
              type: string
              example: Spree::Taxon
              enum:
              - Spree::Taxon
              - Spree::Product
              description: Set the resource type that image one links to.
            link_type_two:
              type: string
              example: Spree::Taxon
              enum:
              - Spree::Taxon
              - Spree::Product
              description: Set the resource type that image two links to.
            link_one:
              type: string
              example: men/shirts
              nullable: true
              description: Set the slug or path that image two links to.
            link_two:
              type: string
              example: white-shirt
              nullable: true
              description: Set the slug or path that image two links to.
            title_one:
              type: string
              example: Shop Men's Shirts
              nullable: true
              description: Set the title used in image one.
            title_two:
              type: string
              example: Buy This Men's Shirt
              nullable: true
              description: Set the title used in image two.
            fit:
              type: string
              example: Screen
              enum:
              - Screen
              - Container
              description: This value is used by front end developers to set CSS classes
                for content that fits the screen edge-to-edge, or stays within the
                boundaries of the central container.
            subtitle_one:
              type: string
              example: Save 50% today
              nullable: true
              description: Set the subtitle used in image one.
            subtitle_two:
              type: string
              example: Save 50% today
              nullable: true
              description: Set the subtitle used in image two.
            gutters:
              type: string
              example: No Gutters
              enum:
              - Gutters
              - No Gutters
              description: This value is used by front end developers for styling
                the section padding.
            cms_section[image_one]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
            cms_section[image_two]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
      required:
      - cms_section
      title: Create a Side-by-Side Image Section
      x-internal: true
    create_image_gallery_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          required:
          - name
          - cms_page_id
          - type
          properties:
            name:
              type: string
              description: Give this section a name.
            cms_page_id:
              type: string
              description: Set the `cms_page` ID that this section belongs to.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::ImageGallery
              example: Spree::Cms::Sections::ImageGallery
              description: Set the section type.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            link_type_one:
              type: string
              example: Spree::Taxon
              enum:
              - Spree::Taxon
              - Spree::Product
              description: Set the resource type that image one links to.
            link_type_two:
              type: string
              example: Spree::Taxon
              enum:
              - Spree::Taxon
              - Spree::Product
              description: Set the resource type that image two links to.
            link_type_three:
              type: string
              example: Spree::Taxon
              enum:
              - Spree::Taxon
              - Spree::Product
              description: Set the resource type that image three links to.
            link_one:
              type: string
              example: men/shirts
              nullable: true
              description: Set the slug or path that image two links to.
            link_two:
              type: string
              example: white-shirt
              nullable: true
              description: Set the slug or path that image two links to.
            link_three:
              type: string
              example: red-shirt
              nullable: true
              description: Set the slug or path that image three links to.
            title_one:
              type: string
              example: Shop Men's Shirts
              nullable: true
              description: Set the title used in image one.
            title_two:
              type: string
              example: Buy This Men's Shirt
              nullable: true
              description: Set the title used in image two.
            title_three:
              type: string
              example: Buy This Women's Skirt
              nullable: true
              description: Set the title used in image three.
            fit:
              type: string
              example: Screen
              enum:
              - Screen
              - Container
              description: This value is used by front end developers to set CSS classes
                for content that fits the screen edge-to-edge, or stays within the
                boundaries of the central container.
            layout_style:
              type: string
              example: Default
              enum:
              - Default
              - Reversed
              description: This value is used by front end developers for styling
                the order the images appear.
            display_labels:
              type: string
              example: Show
              enum:
              - Show
              - Hide
              description: This value is used by front end developers for showing
                and hiding the label on the images.
            cms_section[image_one]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
            cms_section[image_two]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
            cms_section[image_three]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
      required:
      - cms_section
      title: Create an Image Gallery Section
      x-internal: true
    create_featured_article_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          required:
          - name
          - cms_page_id
          - type
          properties:
            name:
              type: string
              description: Give this section a name.
            cms_page_id:
              type: string
              description: Set the `cms_page` ID that this section belongs to.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::FeaturedArticle
              example: Spree::Cms::Sections::FeaturedArticle
              description: Set the section type.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            linked_resource_type:
              type: string
              example: Spree::Taxon
              nullable: true
              enum:
              - Spree::Taxon
              - Spree::Product
              - Spree::CmsPage
              description: Set the resource type that this section links to.
            linked_resource_id:
              type: string
              example: '1'
              nullable: true
              description: Set the ID of the resource that you would like this section
                to link to.
            fit:
              type: string
              example: Screen
              enum:
              - Screen
              - Container
              description: This value is used by front end developers to set CSS classes
                for content that fits the screen edge-to-edge, or stays within the
                boundaries of the central container.
            gutters:
              type: string
              example: No Gutters
              enum:
              - Gutters
              - No Gutters
              description: This value is used by front end developers for styling
                the section padding.
            button_text:
              type: string
              example: Click Here
              description: Set the text value of the button used in this section.
            title:
              type: string
              example: Shop Today
              description: Create a title for the Section.
            subtitle:
              type: string
              example: Save Big!
              description: Create a subtitle for the Section.
            rte_content:
              type: string
              example: Lots of text and content goes here.
              description: Set the content, here, this can be rich text editor content.
      required:
      - cms_section
      title: Create a Featured Article Section
      x-internal: true
    create_rich_text_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          required:
          - name
          - cms_page_id
          - type
          properties:
            name:
              type: string
              description: Give this section a name.
            cms_page_id:
              type: string
              description: Set the `cms_page` ID that this section belongs to.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::RichTextContent
              example: Spree::Cms::Sections::RichTextContent
              description: Set the section type.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            fit:
              type: string
              example: Screen
              enum:
              - Screen
              - Container
              description: This value is used by front end developers to set CSS classes
                for content that fits the screen edge-to-edge, or stays within the
                boundaries of the central container.
            rte_content:
              type: string
              example: Lots of text and content goes here.
              description: Set the content, here, this can be rich text editor content.
      required:
      - cms_section
      title: Create a Rich Text Section
      x-internal: true
    update_hero_image_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          properties:
            name:
              type: string
              description: Update this section name.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::HeroImage
              - Spree::Cms::Sections::FeaturedArticle
              - Spree::Cms::Sections::ProductCarousel
              - Spree::Cms::Sections::ImageGallery
              - Spree::Cms::Sections::SideBySideImages
              - Spree::Cms::Sections::RichTextContent
              example: Spree::Cms::Sections::ProductCarousel
              description: Change the section type.
            linked_resource_type:
              type: string
              example: Spree::Taxon
              nullable: true
              enum:
              - Spree::Taxon
              - Spree::Product
              - Spree::CmsPage
              description: Update the resource type that this section links to.
            linked_resource_id:
              type: string
              example: '1'
              nullable: true
              description: Set the ID of the resource that you would like this section
                to link to.
            fit:
              type: string
              example: Screen
              enum:
              - Screen
              - Container
              description: This value is used by front end developers to set CSS classes
                for content that fits the screen edge-to-edge, or stays within the
                boundaries of the central container.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            gutters:
              type: string
              example: No Gutters
              enum:
              - Gutters
              - No Gutters
              description: This value is used by front end developers for styling
                the section padding.
            button_text:
              type: string
              example: Click Here
              description: Update the text value of the button used in this section.
            title:
              type: string
              example: Shop Today
              description: Update the title for this section.
            cms_section[image_one]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
      required:
      - cms_section
      title: Update a Hero Image Section
      x-internal: true
    update_product_carousel_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          properties:
            name:
              type: string
              description: Change this section name.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::HeroImage
              - Spree::Cms::Sections::FeaturedArticle
              - Spree::Cms::Sections::ProductCarousel
              - Spree::Cms::Sections::ImageGallery
              - Spree::Cms::Sections::SideBySideImages
              - Spree::Cms::Sections::RichTextContent
              example: Spree::Cms::Sections::ProductCarousel
              description: Change the section type.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            linked_resource_id:
              type: string
              example: '1'
              nullable: true
              description: Update the ID of the Taxon that you would like displayed
                as a Product Carousel.
      required:
      - cms_section
      title: Update a Product Carousel Section
      x-internal: true
    update_side_by_side_images_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          properties:
            name:
              type: string
              description: Update this section name.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::HeroImage
              - Spree::Cms::Sections::FeaturedArticle
              - Spree::Cms::Sections::ProductCarousel
              - Spree::Cms::Sections::ImageGallery
              - Spree::Cms::Sections::SideBySideImages
              - Spree::Cms::Sections::RichTextContent
              example: Spree::Cms::Sections::ProductCarousel
              description: Change the section type.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            link_type_one:
              type: string
              example: Spree::Taxon
              enum:
              - Spree::Taxon
              - Spree::Product
              description: Update the resource type that image one links to.
            link_type_two:
              type: string
              example: Spree::Taxon
              enum:
              - Spree::Taxon
              - Spree::Product
              description: Update the resource type that image two links to.
            link_one:
              type: string
              example: men/shirts
              nullable: true
              description: Update the slug or path that image two links to.
            link_two:
              type: string
              example: white-shirt
              nullable: true
              description: Update the slug or path that image two links to.
            title_one:
              type: string
              example: Shop Men's Shirts
              nullable: true
              description: Update the title used in image one.
            title_two:
              type: string
              example: Buy This Men's Shirt
              nullable: true
              description: Update the title used in image two.
            fit:
              type: string
              example: Screen
              enum:
              - Screen
              - Container
              description: This value is used by front end developers to set CSS classes
                for content that fits the screen edge-to-edge, or stays within the
                boundaries of the central container.
            subtitle_one:
              type: string
              example: Save 50% today
              nullable: true
              description: Update the subtitle used in image one.
            subtitle_two:
              type: string
              example: Save 50% today
              nullable: true
              description: Update the subtitle used in image two.
            gutters:
              type: string
              example: No Gutters
              enum:
              - Gutters
              - No Gutters
              description: This value is used by front end developers for styling
                the section padding.
            cms_section[image_one]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
            cms_section[image_two]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
      required:
      - cms_section
      title: Update a Side-by-Side Image Section
      x-internal: true
    update_image_gallery_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          properties:
            name:
              type: string
              description: Update this section name.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::HeroImage
              - Spree::Cms::Sections::FeaturedArticle
              - Spree::Cms::Sections::ProductCarousel
              - Spree::Cms::Sections::ImageGallery
              - Spree::Cms::Sections::SideBySideImages
              - Spree::Cms::Sections::RichTextContent
              example: Spree::Cms::Sections::ProductCarousel
              description: Change the section type.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            link_type_one:
              type: string
              example: Spree::Taxon
              enum:
              - Spree::Taxon
              - Spree::Product
              description: Update the resource type that image one links to.
            link_type_two:
              type: string
              example: Spree::Taxon
              enum:
              - Spree::Taxon
              - Spree::Product
              description: Update the resource type that image two links to.
            link_type_three:
              type: string
              example: Spree::Taxon
              enum:
              - Spree::Taxon
              - Spree::Product
              description: Update the resource type that image three links to.
            link_one:
              type: string
              example: men/shirts
              nullable: true
              description: Update the slug or path that image two links to.
            link_two:
              type: string
              example: white-shirt
              nullable: true
              description: Update the slug or path that image two links to.
            link_three:
              type: string
              example: red-shirt
              nullable: true
              description: Update the slug or path that image three links to.
            title_one:
              type: string
              example: Shop Men's Shirts
              nullable: true
              description: Update the title used in image one.
            title_two:
              type: string
              example: Buy This Men's Shirt
              nullable: true
              description: Update the title used in image two.
            title_three:
              type: string
              example: Buy This Women's Skirt
              nullable: true
              description: Update the title used in image three.
            fit:
              type: string
              example: Screen
              enum:
              - Screen
              - Container
              description: This value is used by front end developers to set CSS classes
                for content that fits the screen edge-to-edge, or stays within the
                boundaries of the central container.
            layout_style:
              type: string
              example: Default
              enum:
              - Default
              - Reversed
              description: This value is used by front end developers for styling
                the order the images appear.
            display_labels:
              type: string
              example: Show
              enum:
              - Show
              - Hide
              description: This value is used by front end developers for showing
                and hiding the label on the images.
            cms_section[image_one]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
            cms_section[image_two]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
            cms_section[image_three]:
              type: string
              format: binary
              description: Use a `multipart/form-data` request to upload assets.
      required:
      - cms_section
      title: Update an Image Gallery Section
      x-internal: true
    update_featured_article_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          properties:
            name:
              type: string
              description: Update this section name.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::HeroImage
              - Spree::Cms::Sections::FeaturedArticle
              - Spree::Cms::Sections::ProductCarousel
              - Spree::Cms::Sections::ImageGallery
              - Spree::Cms::Sections::SideBySideImages
              - Spree::Cms::Sections::RichTextContent
              example: Spree::Cms::Sections::ProductCarousel
              description: Change the section type.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            linked_resource_type:
              type: string
              example: Spree::Taxon
              nullable: true
              enum:
              - Spree::Taxon
              - Spree::Product
              - Spree::CmsPage
              description: Set the resource type that this section links to.
            linked_resource_id:
              type: string
              example: '1'
              nullable: true
              description: Change the ID of the resource that you would like this
                section to link to.
            fit:
              type: string
              example: Screen
              enum:
              - Screen
              - Container
              description: This value is used by front end developers to set CSS classes
                for content that fits the screen edge-to-edge, or stays within the
                boundaries of the central container.
            gutters:
              type: string
              example: No Gutters
              enum:
              - Gutters
              - No Gutters
              description: This value is used by front end developers for styling
                the section padding.
            button_text:
              type: string
              example: Click Here
              description: Update the text value of the button used in this section.
            title:
              type: string
              example: Shop Today
              description: Update the title for the Section.
            subtitle:
              type: string
              example: Save Big!
              description: Update the subtitle for the Section.
            rte_content:
              type: string
              example: Lots of text and content goes here.
              description: Update the content here, this can be rich text editor content.
      required:
      - cms_section
      title: Update a Featured Article Section
      x-internal: true
    update_rich_text_cms_section_params:
      type: object
      properties:
        cms_section:
          type: object
          properties:
            name:
              type: string
              description: Update this section name.
            type:
              type: string
              enum:
              - Spree::Cms::Sections::HeroImage
              - Spree::Cms::Sections::FeaturedArticle
              - Spree::Cms::Sections::ProductCarousel
              - Spree::Cms::Sections::ImageGallery
              - Spree::Cms::Sections::SideBySideImages
              - Spree::Cms::Sections::RichTextContent
              example: Spree::Cms::Sections::ProductCarousel
              description: Change the section type.
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this section to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            fit:
              type: string
              example: Screen
              enum:
              - Screen
              - Container
              description: This value is used by front end developers to set CSS classes
                for content that fits the screen edge-to-edge, or stays within the
                boundaries of the central container.
            rte_content:
              type: string
              example: Lots of text and content goes here.
              description: Update the content, here, this can be rich text editor
                content.
      required:
      - cms_section
      title: Update a Rich Text Section
      x-internal: true
    create_digital_params:
      type: object
      properties:
        digital[attachment]:
          type: string
          format: binary
        digital[variant_id]:
          type: string
          example: '123'
      required:
      - digital[attachment]
      - digital[variant_id]
      x-internal: true
    update_digital_params:
      type: object
      properties:
        digital[attachment]:
          type: string
          format: binary
        digital[variant_id]:
          type: string
          example: '123'
      required:
      - digital[attachment]
      - digital[variant_id]
      x-internal: true
    create_digital_link_params:
      type: object
      properties:
        digital_link:
          type: object
          required:
          - line_item_id
          - digital_id
          properties:
            access_counter:
              type: integer
              example: 0
            line_item_id:
              type: string
              example: '1'
            digital_id:
              type: string
              example: '1'
      required:
      - digital_link
      x-internal: true
    update_digital_link_params:
      type: object
      properties:
        digital_link:
          type: object
          properties:
            access_counter:
              type: integer
              example: 0
            line_item_id:
              type: string
              example: '1'
            digital_id:
              type: string
              example: '1'
      required:
      - digital_link
      x-internal: true
    create_line_item_params:
      type: object
      properties:
        line_item:
          type: object
          required:
          - order_id
          - variant_id
          - quantity
          properties:
            order_id:
              type: string
              example: '1'
            variant_id:
              type: string
              example: '1'
            quantity:
              type: integer
              example: 2
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - line_item
      x-internal: true
    update_line_item_params:
      type: object
      properties:
        line_item:
          type: object
          properties:
            variant_id:
              type: string
              example: '1'
            quantity:
              type: integer
              example: 2
      required:
      - line_item
      x-internal: true
    create_menu_params:
      type: object
      properties:
        menu:
          type: object
          required:
          - name
          - location
          - locale
          properties:
            name:
              type: string
              example: Main Menu
              description: Give this Menu a name.
            location:
              type: string
              enum:
              - header
              - footer
              description: Set the location this menu appears in the website.
            locale:
              type: string
              example: en-US
              description: Set the language of this menu.
      required:
      - menu
      x-internal: true
    update_menu_params:
      type: object
      properties:
        menu:
          type: object
          properties:
            name:
              type: string
              example: Main Menu
              description: Update this Menu name.
            location:
              type: string
              enum:
              - header
              - footer
              description: Update the location this menu appears in the website.
            locale:
              type: string
              example: en-US
              description: Change the language of this menu.
      required:
      - menu
      x-internal: true
    create_menu_item_params:
      type: object
      properties:
        menu_item:
          type: object
          required:
          - name
          - menu_id
          properties:
            name:
              type: string
              example: T-Shirts
              description: The name of this Menu Item
            code:
              type: string
              nullable: true
              example: MEN-TS
              description: Give this Menu Item a code to identify this Menu Item from
                others. This is especially useful when using Container type Menu Items
                to group items.
            subtitle:
              type: string
              nullable: true
              example: Shop men's T-Shirts
              description: Set an optional subtitle for the Menu Item, this is useful
                if your menu has promotional links that require more than just a link
                name.
            destination:
              type: string
              nullable: true
              example: https://getvendo.com
              description: 'Used when the linked_resource_type is set to: URL'
            menu_id:
              type: integer
              example: 1
              description: Specify the ID of the Menu this item belongs to.
            new_window:
              type: boolean
              description: When set to `true` the link will be opened in a new tab
                or window.
            item_type:
              type: string
              enum:
              - Link
              - Container
              description: Links are standard links, where as Containers are used
                to group links.
            linked_resource_type:
              type: string
              enum:
              - URL
              - Spree::Taxon
              - Spree::Product
              - Spree::CmsPage
              description: 'Set the type of resource you want to link to, or set to:
                URL to use the destination field for an external link.'
            linked_resource_id:
              type: integer
              example: 1
              nullable: true
              description: The ID of the resource you are linking to.
      required:
      - menu_item
      title: Create a Menu Item
      x-internal: true
    update_menu_item_params:
      type: object
      properties:
        menu_item:
          type: object
          properties:
            name:
              type: string
              example: T-Shirts
              description: Update the name of this Menu Item
            code:
              type: string
              nullable: true
              example: MEN-TS
              description: The Menu Item a code to identifies this Menu Item from
                others. This is especially useful when using Container type Menu Items
                to group items.
            subtitle:
              type: string
              nullable: true
              example: Shop men's T-Shirts
              description: Set an optional subtitle for the Menu Item, this is useful
                if your menu has promotional links that require more than just a link
                name.
            destination:
              type: string
              nullable: true
              example: https://getvendo.com
              description: 'Used when the linked_resource_type is set to: URL'
            menu_id:
              type: integer
              example: 1
              description: Specify the ID of the Menu this item belongs to.
            new_window:
              type: boolean
              description: When set to `true` the link will be opened in a new tab
                or window.
            item_type:
              type: string
              enum:
              - Link
              - Container
              description: Links are standard links, where as Containers are used
                to group links.
            linked_resource_type:
              type: string
              enum:
              - URL
              - Spree::Taxon
              - Spree::Product
              - Spree::CmsPage
              description: 'Change the type of resource you want to link to, or set
                to: URL to use the destination field for an external link.'
            linked_resource_id:
              type: integer
              example: 1
              nullable: true
              description: The ID of the resource you are linking to.
      required:
      - menu_item
      title: Update a Menu Item
      x-internal: true
    menu_item_reposition:
      type: object
      properties:
        menu_item:
          type: object
          required:
          - new_parent_id
          - new_position_idx
          properties:
            new_parent_id:
              type: integer
              example: 1
              description: The ID of the new target parent Menu Item.
            new_position_idx:
              type: integer
              example: 1
              description: The new index position of the Menu Item within its parent
      required:
      - menu_item
      title: Reposition a Menu Item
      x-internal: true
    create_option_type_params:
      type: object
      properties:
        option_type:
          type: object
          required:
          - name
          - presentation
          properties:
            name:
              type: string
              example: color
            presentation:
              type: string
              example: Color
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - option_type
      x-internal: true
    update_option_type_params:
      type: object
      properties:
        option_type:
          type: object
          properties:
            name:
              type: string
              example: color
            presentation:
              type: string
              example: Color
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - option_type
      x-internal: true
    create_option_value_params:
      type: object
      properties:
        option_value:
          type: object
          required:
          - name
          - presentation
          properties:
            name:
              type: string
              example: red
            presentation:
              type: string
              example: Red
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - option_value
      x-internal: true
    update_option_value_params:
      type: object
      properties:
        option_value:
          type: object
          properties:
            name:
              type: string
              example: red
            presentation:
              type: string
              example: Red
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - option_value
      x-internal: true
    create_order_params:
      type: object
      properties:
        order:
          type: object
          properties:
            item_total:
              type: number
              example: 170.9
            total:
              type: number
              example: 190.9
            state:
              type: string
              example: complete
              enum:
              - cart
              - address
              - delivery
              - payment
              - confirm
              - complete
              - canceled
            adjustment_total:
              type: number
              example: 20.0
            user_id:
              type: string
              example: '1'
            completed_at:
              type: string
              format: date_time
              example: 2022-02-04 08:35:27 UTC
            bill_address_id:
              type: string
              example: '1'
            ship_address_id:
              type: string
              example: '1'
            payment_total:
              type: number
              example: 190.9
            shipment_state:
              type: string
              example: shipped
              enum:
              - backorder
              - canceled
              - partial
              - pending
              - ready
              - shipped
            payment_state:
              type: string
              example: paid
              enum:
              - balance_due
              - credit_owed
              - failed
              - paid
              - void
            email:
              type: string
              format: email
              example: hi@getvendo.com
            special_instructions:
              type: string
              example: I need it ASAP!
            currency:
              type: string
              example: USD
            last_ip_address:
              type: string
              example: 127.0.0.1
            created_by_id:
              type: string
              example: '1'
            shipment_total:
              type: number
              example: 10.0
            additional_tax_total:
              type: number
              example: 10.0
            promo_total:
              type: number
              example: 0.0
            channel:
              type: string
              example: online
            included_tax_total:
              type: number
              example: 0.0
            item_count:
              type: integer
              example: 2
            approver_id:
              type: string
            approved_at:
              type: string
              format: date_time
              example: 2022-02-04 08:35:27 UTC
            confirmation_delivered:
              type: boolean
              example: true
              default: false
            considered_risky:
              type: boolean
              example: true
              default: false
            canceled_at:
              type: string
              format: date_time
            canceler_id:
              type: string
            taxable_adjustment_total:
              type: number
              example: 170.9
            non_taxable_adjustment_total:
              type: number
              example: 10.0
            store_owner_notification_delivered:
              type: boolean
              example: true
              default: false
            bill_address_attributes:
              "$ref": "#/components/schemas/update_address_params"
            ship_address_attributes:
              "$ref": "#/components/schemas/update_address_params"
            line_items_attributes:
              type: array
              items:
                "$ref": "#/components/schemas/update_line_item_params"
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - order
      x-internal: true
    update_order_params:
      type: object
      properties:
        order:
          type: object
          properties:
            item_total:
              type: number
              example: 170.9
            total:
              type: number
              example: 190.9
            state:
              type: string
              example: complete
              enum:
              - cart
              - address
              - delivery
              - payment
              - confirm
              - complete
              - canceled
            adjustment_total:
              type: number
              example: 20.0
            user_id:
              type: string
              example: '1'
            completed_at:
              type: string
              format: date_time
              example: 2022-02-04 08:35:27 UTC
            bill_address_id:
              type: string
              example: '1'
            ship_address_id:
              type: string
              example: '1'
            payment_total:
              type: number
              example: 190.9
            shipment_state:
              type: string
              example: shipped
              enum:
              - backorder
              - canceled
              - partial
              - pending
              - ready
              - shipped
            payment_state:
              type: string
              example: paid
              enum:
              - balance_due
              - credit_owed
              - failed
              - paid
              - void
            email:
              type: string
              format: email
              example: hi@getvendo.com
            special_instructions:
              type: string
              example: I need it ASAP!
            currency:
              type: string
              example: USD
            last_ip_address:
              type: string
              example: 127.0.0.1
            created_by_id:
              type: string
              example: '1'
            shipment_total:
              type: number
              example: 10.0
            additional_tax_total:
              type: number
              example: 10.0
            promo_total:
              type: number
              example: 0.0
            channel:
              type: string
              example: online
            included_tax_total:
              type: number
              example: 0.0
            item_count:
              type: integer
              example: 2
            approver_id:
              type: string
            approved_at:
              type: string
              format: date_time
              example: 2022-02-04 08:35:27 UTC
            confirmation_delivered:
              type: boolean
              example: true
              default: false
            considered_risky:
              type: boolean
              example: true
              default: false
            canceled_at:
              type: string
              format: date_time
            canceler_id:
              type: string
            taxable_adjustment_total:
              type: number
              example: 170.9
            non_taxable_adjustment_total:
              type: number
              example: 10.0
            store_owner_notification_delivered:
              type: boolean
              example: true
              default: false
            bill_address_attributes:
              "$ref": "#/components/schemas/update_address_params"
            ship_address_attributes:
              "$ref": "#/components/schemas/update_address_params"
            line_items_attributes:
              type: array
              items:
                "$ref": "#/components/schemas/update_line_item_params"
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - order
      x-internal: true
    create_payment_method_params:
      type: object
      properties:
        payment_method:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: Test Payment Method
            active:
              type: boolean
            auto_capture:
              type: boolean
            description:
              type: string
              example: This is a test payment method
            type:
              type: string
              example: Spree::Gateway::Bogus
              enum:
              - Spree::Gateway::Bogus
              - Spree::PaymentMethod::Check
            display_on:
              type: string
              example: both
              enum:
              - both
              - back_end
              - front_end
            store_ids:
              type: array
              items:
                allOf:
                - type: string
                  example: '2'
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - payment_method
      x-internal: true
    update_payment_method_params:
      type: object
      properties:
        payment_method:
          type: object
          properties:
            name:
              type: string
              example: Test Payment Method
            active:
              type: boolean
            auto_capture:
              type: boolean
            description:
              type: string
              example: This is a test payment method
            type:
              type: string
              example: Spree::Gateway::Bogus
              enum:
              - Spree::Gateway::Bogus
              - Spree::PaymentMethod::Check
            display_on:
              type: string
              example: both
              enum:
              - both
              - back_end
              - front_end
            store_ids:
              type: array
              items:
                allOf:
                - type: string
                  example: '2'
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - payment_method
      x-internal: true
      title: Update Payment Method
    update_payment_method_params_bogus_gateway:
      type: object
      properties:
        payment_method:
          type: object
          properties:
            preferred_dummy_key:
              type: string
              example: UPDATED-DUMMY-KEY-123
            preferred_server:
              type: string
              example: production
            preferred_test_mode:
              type: boolean
      required:
      - payment_method
      x-internal: true
      title: Update Bogus Gateway
    create_product_params:
      type: object
      properties:
        product:
          type: object
          required:
          - name
          - price
          - shipping_category_id
          properties:
            name:
              type: string
            description:
              type: string
            available_on:
              type: string
            discontinue_on:
              type: string
            permalink:
              type: string
            meta_description:
              type: string
            meta_keywords:
              type: string
            price:
              type: string
            sku:
              type: string
            deleted_at:
              type: string
            prototype_id:
              type: string
            option_values_hash:
              type: string
            weight:
              type: string
            height:
              type: string
            width:
              type: string
            depth:
              type: string
            shipping_category_id:
              type: string
            tax_category_id:
              type: string
            cost_currency:
              type: string
            cost_price:
              type: string
            compare_at_price:
              type: string
            option_type_ids:
              type: string
            taxon_ids:
              type: string
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - product
      x-internal: true
    update_product_params:
      type: object
      properties:
        product:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            available_on:
              type: string
            discontinue_on:
              type: string
            permalink:
              type: string
            meta_description:
              type: string
            meta_keywords:
              type: string
            price:
              type: string
            sku:
              type: string
            deleted_at:
              type: string
            prototype_id:
              type: string
            option_values_hash:
              type: string
            weight:
              type: string
            height:
              type: string
            width:
              type: string
            depth:
              type: string
            shipping_category_id:
              type: string
            tax_category_id:
              type: string
            cost_currency:
              type: string
            cost_price:
              type: string
            compare_at_price:
              type: string
            option_type_ids:
              type: string
            taxon_ids:
              type: string
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - product
      x-internal: true
    create_promotion_params:
      type: object
      properties:
        promotion:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: Promotions Used in 2021
              description: Give the promotion a name.
            code:
              type: string
              example: BLK-FRI
              nullable: true
              description: Set the promotion code. Promotions without a code are automatically
                applied if the order meets the Promotion Rule requirements.
            description:
              type: string
              example: Save today with discount code XYZ at checkout.
              nullable: true
              description: Give the promotion a description.
            usage_limit:
              type: integer
              example: 100
              nullable: true
              description: If you wish you can set a usage limit for this promotion.
            advertise:
              type: boolean
            starts_at:
              type: string
              format: date_time
              nullable: true
              description: Set a date and time that this promotion begins.
            ends_at:
              type: string
              format: date_time
              nullable: true
              description: Set a date and time that this promotion ends.
            store_ids:
              type: array
              items:
                allOf:
                - type: string
                  example: '2'
      required:
      - promotion
      title: Create a Promotion
      x-internal: true
    update_promotion_params:
      type: object
      properties:
        promotion:
          type: object
          properties:
            name:
              type: string
              example: Promotions Used in 2021
              description: Change the promotion a name.
            code:
              type: string
              example: CYB-MON
              nullable: true
              description: Change or remove the promotion code. Promotions without
                a code are automatically applied if the order meets the Promotion
                Rule requirements.
            description:
              type: string
              example: Save today with discount code XYZ at checkout.
              nullable: true
              description: Update the promotion a description.
            usage_limit:
              type: integer
              example: 100
              nullable: true
              description: If you wish you can set a usage limit for this promotion.
            advertise:
              type: boolean
            starts_at:
              type: string
              format: date_time
              nullable: true
              description: Set a date and time that this promotion begins.
            ends_at:
              type: string
              format: date_time
              nullable: true
              description: Set a date and time that this promotion ends.
            store_ids:
              type: array
              items:
                allOf:
                - type: string
                  example: '2'
      required:
      - promotion
      title: Update a Promotion
      x-internal: true
    update_promotion_add_rule_params:
      type: object
      properties:
        promotion:
          type: object
          properties:
            promotion_rules_attributes:
              type: array
              items:
                allOf:
                - properties:
                    type:
                      type: string
                      example: Spree::Promotion::Rules::Country
                      enum:
                      - Spree::Promotion::Rules::Country
                      - Spree::Promotion::Rules::ItemTotal
                      - Spree::Promotion::Rules::Product
                      - Spree::Promotion::Rules::User
                      - Spree::Promotion::Rules::FirstOrder
                      - Spree::Promotion::Rules::UserLoggedIn
                      - Spree::Promotion::Rules::OneUsePerUser
                      - Spree::Promotion::Rules::Taxon
                      - Spree::Promotion::Rules::OptionValue
                      description: Set the Promotion Rule type.
                    preferred_country_id:
                      type: integer
                      example: 122
                      description: 'Each rule type has its own preferred attributes.
                        In this example we are setting the ID of the Country this
                        rule applies to. To learn more about Spree preferences visit
                        TODO: [LINK].'
      required:
      - promotion
      title: Add a Rule to a Promotion
      x-internal: true
    update_promotion_update_rule_params:
      type: object
      properties:
        promotion:
          type: object
          properties:
            promotion_rules_attributes:
              type: array
              items:
                allOf:
                - properties:
                    id:
                      type: string
                      example: '22'
                      description: To update an existing Promotion Rule, you are required
                        to pass the ID of the rule you are updating.
                    type:
                      type: string
                      example: Spree::Promotion::Rules::Country
                      enum:
                      - Spree::Promotion::Rules::Country
                      - Spree::Promotion::Rules::ItemTotal
                      - Spree::Promotion::Rules::Product
                      - Spree::Promotion::Rules::User
                      - Spree::Promotion::Rules::FirstOrder
                      - Spree::Promotion::Rules::UserLoggedIn
                      - Spree::Promotion::Rules::OneUsePerUser
                      - Spree::Promotion::Rules::Taxon
                      - Spree::Promotion::Rules::OptionValue
                      description: Set the Promotion Rule type.
                    preferred_country_id:
                      type: integer
                      example: 143
                      description: 'Each rule type has its own preferred attributes.
                        In this example we are changing the ID of the Country this
                        rule applies to. To learn more about Spree preferences visit
                        TODO: [LINK].'
      required:
      - promotion
      title: Update an existing Rule
      x-internal: true
    update_promotion_add_action_params:
      type: object
      properties:
        promotion:
          type: object
          properties:
            promotion_actions_attributes:
              type: array
              items:
                allOf:
                - properties:
                    type:
                      type: string
                      example: Spree::Promotion::Actions::CreateAdjustment
                      enum:
                      - Spree::Promotion::Actions::CreateAdjustment
                      - Spree::Promotion::Actions::CreateItemAdjustments
                      - Spree::Promotion::Actions::FreeShipping
                      - Spree::Promotion::Actions::CreateLineItems
                      description: Set the Promotion Action Type.
      required:
      - promotion
      title: Add an Action to a Promotion
      x-internal: true
    update_promotion_action_calculator_params:
      type: object
      properties:
        promotion:
          type: object
          properties:
            promotion_actions_attributes:
              type: array
              items:
                allOf:
                - properties:
                    id:
                      type: string
                      example: '22'
                      description: To update an existing Promotion Action, you are
                        required to pass the ID of the action you wish to update.
                    calculator_attributes:
                      properties:
                        id:
                          type: string
                          example: '19'
                          description: To update an existing Action Calculator, you
                            are required to pass the ID of the calculator.
                        type:
                          type: string
                          example: Spree::Promotion::Actions::CreateAdjustment
                          enum:
                          - Spree::Promotion::Actions::CreateAdjustment
                          - Spree::Promotion::Actions::CreateItemAdjustments
                          - Spree::Promotion::Actions::CreateLineItems
                          - Spree::Promotion::Actions::FreeShipping
                          description: Set the Type of Promotion Action you wish to
                            use.
                        preferred_flat_percent:
                          type: integer
                          example: 10
                          description: In this example we are setting the preferred
                            flat percentage to `10`.
      required:
      - promotion
      title: Update an Action Calculator
      x-internal: true
    update_promotion_change_calculator_params:
      type: object
      properties:
        promotion:
          type: object
          properties:
            promotion_actions_attributes:
              type: array
              items:
                allOf:
                - properties:
                    id:
                      type: string
                      example: '22'
                      description: To update an existing Promotion Action, you are
                        required to pass the ID of the Promotion Action.
                    calculator_attributes:
                      properties:
                        type:
                          type: string
                          example: Spree::Calculator::FlatPercentItemTotal
                          enum:
                          - Spree::Calculator::FlatPercentItemTotal
                          - Spree::Calculator::FlatRate
                          - Spree::Calculator::FlexiRate
                          - Spree::Calculator::TieredPercent
                          - Spree::Calculator::TieredFlatRate
                          - Spree::Calculator::PercentOnLineItem
                          description: 'To set the Promotion Action Calculator pass
                            the calculator type. Each Promotion action has certain
                            Calculators available, to learn more visit TODO: [LINK]'
      required:
      - promotion
      title: Change an Action Calculator
      x-internal: true
    update_promotion_change_action_params:
      type: object
      properties:
        promotion:
          type: object
          properties:
            promotion_actions_attributes:
              type: array
              items:
                allOf:
                - properties:
                    id:
                      type: string
                      example: '22'
                      description: To update an existing Promotion Action, you are
                        required to pass the ID of the Promotion Action.
                    type:
                      type: string
                      example: Spree::Promotion::Actions::CreateAdjustment
                      enum:
                      - Spree::Promotion::Actions::CreateAdjustment
                      - Spree::Promotion::Actions::CreateItemAdjustments
                      - Spree::Promotion::Actions::CreateLineItems
                      - Spree::Promotion::Actions::FreeShipping
                      description: Set the Type of Promotion Action you wish to use.
      required:
      - promotion
      title: Change an Action Type
      x-internal: true
    create_promotion_action_params:
      type: object
      properties:
        promotion_action:
          type: object
          required:
          - type
          - promotion_id
          properties:
            type:
              type: string
              example: Spree::Promotion::Actions::CreateAdjustment
              enum:
              - Spree::Promotion::Actions::CreateAdjustment
              - Spree::Promotion::Actions::CreateItemAdjustments
              - Spree::Promotion::Actions::CreateLineItems
              - Spree::Promotion::Actions::FreeShipping
              description: Set the Type of Promotion Action you wish to use.
            promotion_id:
              type: string
              example: '22'
              description: Set the ID of the promotion this action belongs to.
      required:
      - promotion_action
      title: Create a Promotion Action
      x-internal: true
    update_promotion_action_params:
      type: object
      properties:
        promotion_action:
          type: object
          properties:
            type:
              type: string
              example: Spree::Promotion::Actions::CreateAdjustment
              enum:
              - Spree::Promotion::Actions::CreateAdjustment
              - Spree::Promotion::Actions::CreateItemAdjustments
              - Spree::Promotion::Actions::CreateLineItems
              - Spree::Promotion::Actions::FreeShipping
              description: Set the Type of Promotion Action you wish to use.
      required:
      - promotion_action
      title: Create a Promotion Action
      x-internal: true
    create_promotion_category_params:
      type: object
      properties:
        promotion_category:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: Promotions Used in 2021
              description: Give this Promotion Category a name.
            code:
              type: string
              example: 2021-PROMOS
              nullable: true
              description: Give this promotion category a code.
      required:
      - promotion_category
      x-internal: true
    update_promotion_category_params:
      type: object
      properties:
        promotion_category:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: Promotions Used in 2021
              description: Update the name of this Promotion Category.
            code:
              type: string
              example: 2021-PROMOS
              nullable: true
              description: Change or remove the code for this Promotion Category.
      required:
      - promotion_category
      x-internal: true
    create_promotion_rule_params:
      type: object
      properties:
        promotion_rule:
          type: object
          required:
          - type
          - promotion_id
          properties:
            promotion_id:
              type: string
              example: '22'
              description: Set the ID of the promotion this Promotion Rule belongs
                to.
            type:
              type: string
              example: Spree::Promotion::Rules::Country
              enum:
              - Spree::Promotion::Rules::Country
              - Spree::Promotion::Rules::ItemTotal
              - Spree::Promotion::Rules::Product
              - Spree::Promotion::Rules::User
              - Spree::Promotion::Rules::FirstOrder
              - Spree::Promotion::Rules::UserLoggedIn
              - Spree::Promotion::Rules::OneUsePerUser
              - Spree::Promotion::Rules::Taxon
              - Spree::Promotion::Rules::OptionValue
              description: Set the Promotion Rule type.
      required:
      - promotion_rule
      title: Create a Promotion Rule
      x-internal: true
    update_promotion_rule_params:
      type: object
      properties:
        promotion_rule:
          type: object
          properties:
            type:
              type: string
              example: Spree::Promotion::Rules::Country
              enum:
              - Spree::Promotion::Rules::Country
              - Spree::Promotion::Rules::ItemTotal
              - Spree::Promotion::Rules::Product
              - Spree::Promotion::Rules::User
              - Spree::Promotion::Rules::FirstOrder
              - Spree::Promotion::Rules::UserLoggedIn
              - Spree::Promotion::Rules::OneUsePerUser
              - Spree::Promotion::Rules::Taxon
              - Spree::Promotion::Rules::OptionValue
              description: Set the Promotion Rule type.
      required:
      - promotion_rule
      title: Create a Promotion Rule
      x-internal: true
    create_role_params:
      type: object
      properties:
        role:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: vendor
      required:
      - zone
      x-internal: true
    update_role_params:
      type: object
      properties:
        role:
          type: object
          properties:
            name:
              type: string
              example: vendor
      required:
      - zone
      x-internal: true
    create_shipment_params:
      type: object
      properties:
        shipment:
          type: object
          required:
          - stock_location_id
          - order_id
          - variant_id
          properties:
            stock_location_id:
              type: string
              example: '101'
            order_id:
              type: string
              example: '101'
            variant_id:
              type: string
              example: '101'
            quantity:
              type: integer
              example: 2
      required:
      - shipping_category
      x-internal: true
    update_shipment_params:
      type: object
      properties:
        shipment:
          type: object
          properties:
            tracking:
              type: string
              example: MY-TRACKING-REF-12324
      required:
      - shipping_category
      x-internal: true
    add_item_shipment_params:
      type: object
      properties:
        shipment:
          type: object
          required:
          - variant_id
          properties:
            variant_id:
              type: string
              example: '101'
            quantity:
              type: integer
              example: 2
      required:
      - shipping_category
      x-internal: true
    remove_item_shipment_params:
      type: object
      properties:
        shipment:
          type: object
          required:
          - variant_id
          properties:
            variant_id:
              type: string
              example: '101'
            quantity:
              type: integer
              example: 2
      required:
      - shipping_category
      x-internal: true
    create_shipping_category_params:
      type: object
      properties:
        shipping_category:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: Another Category
      required:
      - shipping_category
      x-internal: true
    update_shipping_category_params:
      type: object
      properties:
        shipping_category:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: Another Category
      required:
      - shipping_category
      x-internal: true
    create_shipping_method_params:
      type: object
      properties:
        shipping_method:
          type: object
          required:
          - name
          - display_on
          - shipping_category_ids
          properties:
            name:
              type: string
              example: DHL Express
            admin_name:
              type: string
              example: DHL Area Code D
            code:
              type: string
              example: DHL-A-D
            tracking_url:
              type: string
              example: dhlexpress.com?tracking=
            display_on:
              type: string
              example: both
              enum:
              - both
              - back_end
              - front_end
            tax_category_id:
              type: string
              example: '1'
            shipping_category_ids:
              type: array
              items:
                allOf:
                - type: string
                  example: '2'
            calculator_attributes:
              "$ref": "#/components/schemas/shipping_calculator_params"
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - shipping_method
      x-internal: true
    update_shipping_method_params:
      type: object
      properties:
        shipping_method:
          type: object
          properties:
            name:
              type: string
              example: DHL Express
            admin_name:
              type: string
              example: DHL Area Code D
            code:
              type: string
              example: DHL-A-D
            tracking_url:
              type: string
              example: dhlexpress.com?tracking=
            display_on:
              type: string
              example: both
              enum:
              - both
              - back_end
              - front_end
            tax_category_id:
              type: string
              example: '1'
            shipping_category_ids:
              type: array
              items:
                allOf:
                - type: string
                  example: '2'
            calculator_attributes:
              "$ref": "#/components/schemas/shipping_calculator_params"
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - shipping_method
      x-internal: true
    shipping_calculator_params:
      type: object
      properties:
        type:
          type: string
          example: Spree::Calculator::Shipping::FlatPercentItemTotal
          enum:
          - Spree::Calculator::Shipping::DigitalDelivery
          - Spree::Calculator::Shipping::FlatPercentItemTotal
          - Spree::Calculator::Shipping::FlatRate
          - Spree::Calculator::Shipping::FlexiRate
          - Spree::Calculator::Shipping::PerItem
          - Spree::Calculator::Shipping::PriceSack
      required:
      - type
      x-internal: true
    create_stock_item_params:
      type: object
      properties:
        stock_item:
          type: object
          required:
          - variant_id
          - stock_location_id
          - count_on_hand
          properties:
            variant_id:
              type: string
              example: '2'
            stock_location_id:
              type: string
              example: '2'
            count_on_hand:
              type: number
              example: 200
            backorderable:
              type: boolean
              example: true
              default: false
      required:
      - stock_item
      x-internal: true
    update_stock_item_params:
      type: object
      properties:
        stock_item:
          type: object
          required:
          - variant_id
          - stock_location_id
          - count_on_hand
          properties:
            variant_id:
              type: string
              example: '2'
            stock_location_id:
              type: string
              example: '2'
            count_on_hand:
              type: number
              example: 200
            backorderable:
              type: boolean
              example: true
              default: false
      required:
      - stock_item
      x-internal: true
    create_stock_location_params:
      type: object
      properties:
        stock_location:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: Warehouse 3
            default:
              type: boolean
            address1:
              type: string
              example: South St. 8
            address2:
              type: string
              example: South St. 109
            country_id:
              type: string
              example: '2'
            state_id:
              type: string
              example: '4'
            city:
              type: string
              example: Los Angeles
            state_name:
              type: string
              example: California
            zipcode:
              type: string
              example: '90005'
            phone:
              type: string
              example: '23333456'
            active:
              type: boolean
            backorderable_default:
              type: boolean
            propagate_all_variants:
              type: boolean
            admin_name:
              type: string
      required:
      - stock_location
      x-internal: true
    update_stock_location_params:
      type: object
      properties:
        stock_location:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: Warehouse 3
            default:
              type: boolean
            address1:
              type: string
              example: South St. 8
            address2:
              type: string
              example: South St. 109
            country_id:
              type: string
              example: '2'
            state_id:
              type: string
              example: '4'
            city:
              type: string
              example: Los Angeles
            state_name:
              type: string
              example: California
            zipcode:
              type: string
              example: '90005'
            phone:
              type: string
              example: '23333456'
            active:
              type: boolean
            backorderable_default:
              type: boolean
            propagate_all_variants:
              type: boolean
            admin_name:
              type: string
      required:
      - stock_location
      x-internal: true
    create_store_credit_category_params:
      type: object
      properties:
        store_credit_category:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: refunded
      required:
      - store_credit_category
      x-internal: true
    update_store_credit_category_params:
      type: object
      properties:
        store_credit_category:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: refunded
      required:
      - store_credit_category
      x-internal: true
    create_store_credit_type_params:
      type: object
      properties:
        store_credit_type:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: refunded
            priority:
              type: integer
              example: 1
      required:
      - store_credit_type
      x-internal: true
    update_store_credit_type_params:
      type: object
      properties:
        store_credit_type:
          type: object
          properties:
            name:
              type: string
              example: refunded
            priority:
              type: integer
              example: 1
      required:
      - store_credit_type
      x-internal: true
    create_store_credit_params:
      type: object
      properties:
        store_credit:
          type: object
          required:
          - user_id
          - category_id
          - type_id
          - created_by_id
          - currency
          - store_id
          - amount
          properties:
            user_id:
              type: string
              example: '2'
            category_id:
              type: string
              example: '4'
            created_by_id:
              type: string
              example: '5'
            amount:
              type: number
              example: 25.0
            amount_used:
              type: number
              example: 10.0
            memo:
              type: string
              example: This credit was given as a refund
            currency:
              type: string
              example: USD
            amount_authorized:
              type: number
              example: 15.5
            originator_id:
              type: string
              example: '3'
            originator_type:
              type: string
              example: Refund
            type_id:
              type: string
              example: '1'
            store_id:
              type: string
              example: '2'
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - store_credit
      x-internal: true
    update_store_credit_params:
      type: object
      properties:
        store_credit:
          type: object
          required:
          - user_id
          - category_id
          - type_id
          - created_by_id
          - currency
          - store_id
          - amount
          properties:
            user_id:
              type: string
              example: '2'
            category_id:
              type: string
              example: '4'
            created_by_id:
              type: string
              example: '5'
            amount:
              type: number
              example: 25.0
            amount_used:
              type: number
              example: 10.0
            memo:
              type: string
              example: This credit was given as a refund
            currency:
              type: string
              example: USD
            amount_authorized:
              type: number
              example: 15.5
            originator_id:
              type: string
              example: '3'
            originator_type:
              type: string
              example: Refund
            type_id:
              type: string
              example: '1'
            store_id:
              type: string
              example: '2'
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - store_credit
      x-internal: true
    create_tax_category_params:
      type: object
      properties:
        tax_category:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: Clothing
            is_default:
              type: boolean
              example: true
            tax_code:
              type: string
              example: 1257L
            description:
              type: string
              example: Men's, women's and children's branded clothing
      required:
      - tax_category
      x-internal: true
    update_tax_category_params:
      type: object
      properties:
        tax_category:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: Clothing
            is_default:
              type: boolean
              example: true
            tax_code:
              type: string
              example: 1257L
            description:
              type: string
              example: Men's, women's and children's branded clothing
      required:
      - tax_category
      x-internal: true
    create_tax_rate_params:
      type: object
      properties:
        tax_rate:
          type: object
          required:
          - amount
          - calculator_attributes
          - tax_category_id
          properties:
            amount:
              type: number
              example: 0.05
            zone_id:
              type: string
              example: '2'
            tax_category_id:
              type: string
              example: '1'
            included_in_price:
              type: boolean
              example: true
            name:
              type: string
              example: California
            show_rate_in_label:
              type: boolean
              example: false
            calculator_attributes:
              type: object
              properties:
                type:
                  type: string
                  example: Spree::Calculator::FlatRate
                preferences:
                  type: object
                  example:
                    amount: 0
                    currency: USD
      required:
      - tax_rate
      x-internal: true
    update_tax_rate_params:
      type: object
      properties:
        tax_rate:
          type: object
          required:
          - amount
          - calculator_attributes
          - tax_category_id
          properties:
            amount:
              type: number
              example: 0.05
            zone_id:
              type: string
              example: '2'
            tax_category_id:
              type: string
              example: '1'
            included_in_price:
              type: boolean
              example: true
            name:
              type: string
              example: California
            show_rate_in_label:
              type: boolean
              example: false
            calculator_attributes:
              type: object
              properties:
                type:
                  type: string
                  example: Spree::Calculator::FlatRate
                preferences:
                  type: object
                  example:
                    amount: 0
                    currency: USD
      required:
      - tax_rate
      x-internal: true
    create_taxon_params:
      type: object
      properties:
        taxon:
          type: object
          required:
          - name
          - taxonomy_id
          properties:
            taxonomy_id:
              type: string
            parent_id:
              type: string
            name:
              type: string
            public_metadata:
              type: object
              example:
                ability_to_recycle: 90%
            private_metadata:
              type: object
              example:
                profitability: 2
      required:
      - taxon
      x-internal: true
    update_taxon_params:
      type: object
      properties:
        taxon:
          type: object
          properties:
            taxonomy_id:
              type: string
            parent_id:
              type: string
            name:
              type: string
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - taxon
      x-internal: true
    taxon_reposition:
      type: object
      properties:
        taxon:
          type: object
          required:
          - new_parent_id
          - new_position_idx
          properties:
            new_parent_id:
              type: integer
              example: 1
              description: The ID of the new target parent Taxon.
            new_position_idx:
              type: integer
              example: 1
              description: The new index position of the Taxon within the parent Taxon.
      required:
      - taxon
      title: Reposition a Taxon
      x-internal: true
    create_taxonomy_params:
      type: object
      properties:
        taxonomy:
          type: object
          required:
          - name
          properties:
            name:
              type: string
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this Taxonomy to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            public_metadata:
              type: object
              example:
                ability_to_recycle: 90%
            private_metadata:
              type: object
              example:
                profitability: 2
      required:
      - taxonomy
      x-internal: true
    update_taxonomy_params:
      type: object
      properties:
        taxonomy:
          type: object
          properties:
            name:
              type: string
            position:
              type: integer
              example: 2
              description: 'Pass the position that you want this Taxonomy to appear
                in. (The list is not zero indexed, so the first item is position:
                `1`)'
            public_metadata:
              type: object
              example:
                ability_to_recycle: 90%
            private_metadata:
              type: object
              example:
                profitability: 2
      required:
      - taxonomy
      x-internal: true
    create_user_params:
      type: object
      properties:
        user:
          type: object
          required:
          - email
          - password
          - password_confirmation
          properties:
            email:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            password:
              type: string
            password_confirmation:
              type: string
            ship_address_id:
              type: string
            bill_address_id:
              type: string
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - user
      x-internal: true
    update_user_params:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            password:
              type: string
            password_confirmation:
              type: string
            ship_address_id:
              type: string
            bill_address_id:
              type: string
            public_metadata:
              type: object
            private_metadata:
              type: object
      required:
      - user
      x-internal: true
    create_webhook_subscriber_params:
      type: object
      properties:
        subscriber:
          type: object
          required:
          - url
          properties:
            active:
              type: boolean
              example: true
              default: false
            subscriptions:
              type: array
              items:
                allOf:
                - type: string
                  example: order.completed
              example:
              - order.created
              - order.completed
              - product.updated
              default: []
            url:
              type: string
              example: https://www.url.com/
      required:
      - subscriber
      x-internal: true
    update_webhook_subscriber_params:
      type: object
      properties:
        subscriber:
          type: object
          required:
          - url
          properties:
            active:
              type: boolean
              example: true
              default: false
            subscriptions:
              type: array
              items:
                allOf:
                - type: string
                  example: order.completed
              example:
              - order.created
              - order.completed
              - product.updated
              default: []
            url:
              type: string
              example: https://www.url.com/
      required:
      - subscriber
      x-internal: true
    create_wishlist_params:
      type: object
      properties:
        wishlist:
          type: object
          required:
          - name
          - user_id
          properties:
            name:
              type: string
            user_id:
              type: string
            is_default:
              type: boolean
            is_private:
              type: boolean
      required:
      - wishlist
      x-internal: true
    update_wishlist_params:
      type: object
      properties:
        wishlist:
          type: object
          properties:
            name:
              type: string
            user_id:
              type: string
            is_default:
              type: boolean
            is_private:
              type: boolean
      required:
      - wishlist
      x-internal: true
    create_wished_item_params:
      type: object
      properties:
        wished_item:
          type: object
          required:
          - wishlist_id
          - variant_id
          - quantity
          properties:
            wishlist_id:
              type: string
            variant_id:
              type: string
            quantity:
              type: integer
              description: Must be an integer greater than 0
      required:
      - wished_item
      x-internal: true
    update_wished_item_params:
      type: object
      properties:
        wished_item:
          type: object
          required:
          - wishlist_id
          - variant_id
          - quantity
          properties:
            wishlist_id:
              type: string
            variant_id:
              type: string
            quantity:
              type: integer
              description: Must be an integer greater than 0
      required:
      - wished_item
      x-internal: true
    create_zone_params:
      type: object
      properties:
        zone:
          type: object
          required:
          - name
          properties:
            name:
              type: string
              example: EU
            description:
              type: string
              example: All countries in the EU
            default_tax:
              type: boolean
            kind:
              type: string
              example: state
              enum:
              - state
              - country
      required:
      - zone
      x-internal: true
    update_zone_params:
      type: object
      properties:
        address:
          type: object
          properties:
            name:
              type: string
              example: EU
            description:
              type: string
              example: All countries in the EU
            default_tax:
              type: boolean
            kind:
              type: string
              example: state
              enum:
              - state
              - country
      required:
      - zone
      x-internal: true
    amount_param:
      type: object
      properties:
        amount:
          type: number
      x-internal: true
    coupon_code_param:
      type: object
      properties:
        coupon_code:
          type: string
      x-internal: true
    resources_list:
      type: object
      properties:
        data:
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/resource_properties"
        meta:
          type: object
          properties:
            count:
              type: integer
            total_count:
              type: integer
            total_pages:
              type: integer
          required:
          - count
          - total_count
          - total_pages
        links:
          type: object
          properties:
            self:
              type: string
            next:
              type: string
            prev:
              type: string
            last:
              type: string
            first:
              type: string
          required:
          - self
          - next
          - prev
          - last
          - first
      required:
      - data
      - meta
      - links
      x-internal: true
    resource_properties:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
        relationships:
          type: object
      required:
      - id
      - type
      - attributes
      x-internal: true
    resource:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/resource_properties"
      required:
      - data
      x-internal: true
    error:
      type: object
      properties:
        error:
          type: string
      required:
      - error
      x-internal: true
    validation_errors:
      type: object
      properties:
        error:
          type: string
        errors:
          type: object
      required:
      - error
      - errors
      x-internal: true
